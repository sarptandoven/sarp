{"version":3,"file":"bundle.ed39ebce5ea3522c8700.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///webpack/runtime/publicPath","webpack:///./node_modules/dragselect/dist/DragSelect.esm.js","webpack:///./static/resume/SARPDOVENRESUME.pdf","webpack:///./src/experience.js","webpack:///./src/about-me.js","webpack:///./src/credits.js","webpack:///./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack:///./node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","webpack:///./node_modules/@emailjs/browser/es/store/store.js","webpack:///./node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","webpack:///./node_modules/@emailjs/browser/es/methods/send/send.js","webpack:///./node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","webpack:///./node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","webpack:///./node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","webpack:///./node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","webpack:///./node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","webpack:///./node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","webpack:///./node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","webpack:///./node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","webpack:///./node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","webpack:///./node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","webpack:///./node_modules/@emailjs/browser/es/api/sendPost.js","webpack:///./src/contact.js","webpack:///./node_modules/@emailjs/browser/es/methods/init/init.js","webpack:///./src/desktop.js","webpack:///./src/script.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","/***\n\n ~~~ Version 3.0.4 ~~~\n\n ******************************************\n\n    ____                   _____      __          __ \n   / __ \\_________ _____ _/ ___/___  / /__  _____/ /_\n  / / / / ___/ __ `/ __ `/\\__ \\/ _ \\/ / _ \\/ ___/ __/\n / /_/ / /  / /_/ / /_/ /___/ /  __/ /  __/ /__/ /_  \n/_____/_/   \\__,_/\\__, //____/\\___/_/\\___/\\___/\\__/  \n               /____/                              \n\n ******************************************\n \n {*} {*} STAR THIS PROJECT ON GITHUB {*} {*}\n\n https://github.com/ThibaultJanBeyer/DragSelect\n Please give it a like, this is what makes me happy :-)\n Thank You\n\n {*} {*} STAR THIS PROJECT ON GITHUB {*} {*}\n \n ***************************************\n ********* GPLv3 / Commercial **********\n ***************************************\n Created 2017 by ThibaultJanBeyer\n Web: http://www.DragSelect.com/\n GitHub: https://github.com/ThibaultJanBeyer/DragSelect\n ***************************************\n*/\nconst addModificationObservers = (nodes, cb) => {\n    const callback = cb;\n    window.addEventListener('resize', callback);\n    window.addEventListener('scroll', callback);\n    const observer = new MutationObserver(callback);\n    const resizeObserver = new ResizeObserver(callback);\n    nodes.forEach((el, i) => {\n        observer.observe(el, {\n            childList: i !== 0,\n            attributes: true,\n        });\n        if (el instanceof Element)\n            resizeObserver.observe(el);\n    });\n    /**\n     * Removes all observers\n     */\n    const cleanup = () => {\n        window.removeEventListener('resize', callback);\n        window.removeEventListener('scroll', callback);\n        observer.disconnect();\n        resizeObserver.disconnect();\n    };\n    return { observer, resizeObserver, callback, cleanup };\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * `wait` milliseconds. All credits to [Trey Huffine]{@link https://levelup.gitconnected.com/debounce-in-javascript-improve-your-applications-performance-5b01855e086}\n */\nconst debounce = (func, wait) => {\n    let timeout;\n    // This is the function that is returned and will be executed many times\n    // We spread (...args) to capture any number of parameters we want to pass\n    return (...args) => {\n        // The callback function to be executed after\n        // the debounce time has elapsed\n        const later = () => {\n            // null timeout to indicate the debounce ended\n            timeout = undefined;\n            // Execute the callback\n            func(...args);\n        };\n        // This will reset the waiting every function execution.\n        // This is the step that prevents the function from\n        // being executed because it will never reach the\n        // inside of the previous setTimeout\n        clearTimeout(timeout);\n        // Restart the debounce waiting period.\n        // setTimeout returns a truthy value (it differs in web vs Node)\n        timeout = setTimeout(later, wait);\n    };\n};\n\nconst getAllParentNodes = (node) => {\n    const traverse = (toWatch, index = 0) => {\n        const parent = toWatch[index]?.parentNode;\n        if (parent) {\n            toWatch.push(parent);\n            index++;\n            return traverse(toWatch, index);\n        }\n        return toWatch;\n    };\n    return traverse([node]);\n};\n\n/**\n * Returns the top/left/bottom/right/width/height\n * values of an area. If area is document then everything\n * except the sizes will be nulled.\n */\nconst getAreaRect = (area, zoom) => {\n    if (area instanceof Document)\n        return {\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n    const rect = area.getBoundingClientRect();\n    return {\n        top: rect.top,\n        left: rect.left,\n        bottom: rect.bottom,\n        right: rect.right,\n        width: (area.clientWidth || rect.width) * zoom,\n        height: (area.clientHeight || rect.height) * zoom,\n    };\n};\n\n/** Fix: some elements have to have a special position attribute for calculations */\nconst handleElementPositionAttribute = ({ computedStyle, node }) => {\n    const { position } = computedStyle;\n    const isPositioned = position === 'absolute' || position === 'relative' || position === 'fixed';\n    if (!(node instanceof Document) && !isPositioned)\n        node.style.position = 'relative';\n};\n\n/** Scroll the element in the specified direction */\nconst scrollElement = (element, directions, multiplier = 1) => {\n    if (!directions?.length || !element)\n        return;\n    const docEl = document &&\n        document.documentElement &&\n        document.documentElement.scrollTop &&\n        document.documentElement;\n    const _element = element instanceof Document ? docEl || document.body : element;\n    const scrollTop = directions.includes('top') && _element.scrollTop > 0;\n    const scrollBot = directions.includes('bottom') && _element.scrollTop < _element.scrollHeight;\n    const scrollLeft = directions.includes('left') && _element.scrollLeft > 0;\n    const scrollRight = directions.includes('right') && _element.scrollLeft < _element.scrollWidth;\n    if (scrollTop)\n        _element.scrollTop -= 1 * multiplier;\n    if (scrollBot)\n        _element.scrollTop += 1 * multiplier;\n    if (scrollLeft)\n        _element.scrollLeft -= 1 * multiplier;\n    if (scrollRight)\n        _element.scrollLeft += 1 * multiplier;\n};\n\nclass Area {\n    DS;\n    PS;\n    Settings;\n    _observers;\n    _node;\n    _parentNodes;\n    _computedStyle;\n    _computedBorder;\n    _rect;\n    constructor({ DS, PS }) {\n        this.DS = DS;\n        this.PS = PS;\n        this.Settings = this.DS.stores.SettingsStore.s;\n        this._node = this.Settings.area;\n        this.setArea(this.Settings.area);\n        this.PS.subscribe('Settings:updated:area', ({ settings: { area } }) => this.setArea(area));\n        this.PS.subscribe('Interaction:init', this.init);\n        this.PS.subscribe('Interaction:end', this.reset);\n    }\n    setArea = (area) => {\n        this.reset();\n        this._node = area;\n        handleElementPositionAttribute({\n            computedStyle: this.computedStyle,\n            node: this._node,\n        });\n        // first immediate debounce to update values after dom-update\n        setTimeout(() => {\n            this.PS.publish('Area:modified:pre', { item: this.HTMLNode });\n            this.reset();\n            this.PS.publish('Area:modified', { item: this.HTMLNode });\n        });\n    };\n    init = () => {\n        this._observers = addModificationObservers(this.parentNodes, debounce((event) => {\n            this.PS.publish('Area:modified:pre', { event, item: this.HTMLNode });\n            this.reset();\n            this.PS.publish('Area:modified', { event, item: this.HTMLNode });\n        }, 60));\n    };\n    reset = () => {\n        this._computedStyle = undefined;\n        this._rect = undefined;\n        this._computedBorder = undefined;\n        this._parentNodes = undefined;\n    };\n    stop = () => {\n        this._observers?.cleanup();\n        this.reset();\n    };\n    /// ///////////////////////////////////////////////////////////////////////////////////\n    // Scroll\n    /** Scroll the area in the specified direction */\n    scroll = (directions, multiplier) => {\n        const data = {\n            scroll_directions: directions,\n            scroll_multiplier: multiplier,\n        };\n        this.PS.publish('Area:scroll:pre', data);\n        scrollElement(this._node, directions, multiplier);\n        this.PS.publish('Area:scroll', data);\n    };\n    /// ///////////////////////////////////////////////////////////////////////////////////\n    // Node Getters\n    get HTMLNode() {\n        return this._node;\n    }\n    /** The computed border from the element (caches result) */\n    get computedBorder() {\n        if (this._computedBorder)\n            return this._computedBorder;\n        return {\n            top: parseInt(this.computedStyle.borderTopWidth),\n            bottom: parseInt(this.computedStyle.borderBottomWidth),\n            left: parseInt(this.computedStyle.borderLeftWidth),\n            right: parseInt(this.computedStyle.borderRightWidth),\n        };\n    }\n    /** The computed styles from the element (caches result) */\n    get computedStyle() {\n        if (this._computedStyle)\n            return this._computedStyle;\n        if (this.HTMLNode instanceof Document)\n            return (this._computedStyle = window.getComputedStyle(this.HTMLNode.body || this.HTMLNode.documentElement));\n        return (this._computedStyle = window.getComputedStyle(this.HTMLNode));\n    }\n    /** The element rect (caches result) (without scrollbar or borders) */\n    get rect() {\n        if (this._rect)\n            return this._rect;\n        return (this._rect = getAreaRect(this.HTMLNode, this.DS.stores.SettingsStore.s.zoom));\n    }\n    get parentNodes() {\n        if (this._parentNodes)\n            return this._parentNodes;\n        return (this._parentNodes = getAllParentNodes(this.HTMLNode));\n    }\n}\n\nconst calcVect = ({ x: x1, y: y1 }, operator, { x: x2, y: y2 }) => {\n    const calculations = {\n        '+': {\n            x: x1 + x2,\n            y: y1 + y2,\n        },\n        '-': {\n            x: x1 - x2,\n            y: y1 - y2,\n        },\n        '*': {\n            x: x1 * x2,\n            y: y1 * y2,\n        },\n        '/': {\n            x: x1 / x2,\n            y: y1 / y2,\n        },\n    };\n    return calculations[operator];\n};\nconst rect2vect = (rect) => ({ x: rect.left, y: rect.top });\nconst vect2rect = (vect, dimension = 0) => ({\n    left: vect.x,\n    top: vect.y,\n    right: vect.x,\n    bottom: vect.y,\n    width: dimension,\n    height: dimension,\n});\nconst num2vect = (n) => ({ x: n, y: n });\n\nconst handleKeyboardDragPosDifference = ({ shiftKey, keyboardDragSpeed, zoom, key, dragKeys, scrollDiff, }) => {\n    const posDirection = { x: 0, y: 0 };\n    const increase = shiftKey\n        ? keyboardDragSpeed * 4 * zoom\n        : keyboardDragSpeed * zoom;\n    if (dragKeys?.left.includes(key))\n        posDirection.x = scrollDiff.x || -increase;\n    if (dragKeys?.right.includes(key))\n        posDirection.x = scrollDiff.x || increase;\n    if (dragKeys?.up.includes(key))\n        posDirection.y = scrollDiff.y || -increase;\n    if (dragKeys?.down.includes(key))\n        posDirection.y = scrollDiff.y || increase;\n    return posDirection;\n};\n\nconst getComputedTranslatePositions = (element) => {\n    const position = {\n        x: 0,\n        y: 0,\n    };\n    const computed = window.getComputedStyle(element);\n    if (!computed.transform || computed.transform === 'none')\n        return position;\n    if (computed.transform.indexOf('3d') >= 0) {\n        const match = computed.transform.trim().match(/matrix3d\\((.*?)\\)/);\n        if (match && match.length) {\n            const values = match[1]?.split(',');\n            position.x = parseInt(values[12]) || 0;\n            position.y = parseInt(values[13]) || 0;\n        }\n        return position;\n    }\n    const match = computed.transform.trim().match(/matrix\\((.*?)\\)/);\n    if (match && match.length) {\n        const values = match[1]?.split(',');\n        position.x = parseInt(values[4]) || 0;\n        position.y = parseInt(values[5]) || 0;\n    }\n    return position;\n};\nconst getTranslatedPositions = (element) => {\n    const { transform } = element.style;\n    if (!transform || transform.indexOf('translate') < 0)\n        return getComputedTranslatePositions(element);\n    const position = {\n        x: 0,\n        y: 0,\n    };\n    const match = transform.trim().match(/translate[3dD]*?\\(.*?\\)/);\n    if (match) {\n        const split = match[0]?.split('(');\n        if (split) {\n            const values = split[1]?.split(',');\n            position.x = parseInt(values[0]) || 0;\n            position.y = parseInt(values[1]) || 0;\n        }\n    }\n    if (!position.x && !position.x)\n        return getComputedTranslatePositions(element);\n    return position;\n};\nconst getTopLeftPosition = (element) => {\n    const { style } = element;\n    const position = {\n        x: parseInt(style.left) || 0,\n        y: parseInt(style.top) || 0,\n    };\n    // initial positions\n    if (!position.x && !position.x) {\n        const computed = window.getComputedStyle(element);\n        return {\n            x: parseInt(computed.left) || 0,\n            y: parseInt(computed.top) || 0,\n        };\n    }\n    return position;\n};\n/**\n * Returns the X and Y coordinates based on styles\n * Can handle translate and top/left\n */\nconst getStylePosition = (element, useTranslate) => {\n    if (useTranslate)\n        return getTranslatedPositions(element);\n    return getTopLeftPosition(element);\n};\n\n/** Sets the style position to the X and Y coordinates. Can handle translate and top/left */\nconst setStylePosition = (element, values, useTranslate) => {\n    if (useTranslate) {\n        const prevTransform = element.style.transform;\n        element.style.transform = `translate3d(${values.x}px,${values.y}px,1px) ${prevTransform.replace(/translate.*?\\)/g, '')}`;\n    }\n    else {\n        element.style.left = `${values.x}px`;\n        element.style.top = `${values.y}px`;\n    }\n    return element;\n};\n\n/** Moves the element in a posDirection */\nconst moveElement = ({ element, posDirection, useTransform }) => {\n    const elementPos = getStylePosition(element, useTransform);\n    const newPos = calcVect(elementPos, '+', posDirection);\n    setStylePosition(element, newPos, useTransform);\n};\n\n/**\n * Modify direction value so that the rect of draggable elements\n * does not exceed the boundaries of container rect\n */\nconst limitDirection = ({ containerRect, selectionRect, direction, scrollAmount }) => {\n    const delta = {\n        top: containerRect.top - selectionRect.top + scrollAmount.y,\n        left: containerRect.left - selectionRect.left + scrollAmount.x,\n        bottom: containerRect.bottom - selectionRect.bottom + scrollAmount.y,\n        right: containerRect.right - selectionRect.right + scrollAmount.x,\n    };\n    if (direction.x === 0 && direction.y === 0)\n        return direction;\n    if (direction.y < 0)\n        direction.y = Math.max(direction.y, delta.top);\n    if (direction.x < 0)\n        direction.x = Math.max(direction.x, delta.left);\n    if (direction.y > 0)\n        direction.y = Math.min(direction.y, delta.bottom);\n    if (direction.x > 0)\n        direction.x = Math.min(direction.x, delta.right);\n    selectionRect.top += direction.y;\n    selectionRect.bottom += direction.y;\n    selectionRect.left += direction.x;\n    selectionRect.right += direction.x;\n    return direction;\n};\n\nclass Drag {\n    _prevCursorPos;\n    _prevScrollPos;\n    _elements = [];\n    _dragKeys;\n    _dragKeysFlat = [];\n    _selectionRect = vect2rect(num2vect(0));\n    DS;\n    PS;\n    Settings;\n    constructor({ DS, PS }) {\n        this.DS = DS;\n        this.PS = PS;\n        this.Settings = this.DS.stores.SettingsStore.s;\n        this.PS.subscribe('Settings:updated:dragKeys', this.assignDragKeys);\n        this.assignDragKeys();\n        this.PS.subscribe('Interaction:start', this.start);\n        this.PS.subscribe('Interaction:end', this.stop);\n        this.PS.subscribe('Interaction:update', this.update);\n        this.PS.subscribe('KeyStore:down', this.keyboardDrag);\n        this.PS.subscribe('KeyStore:up', this.keyboardEnd);\n    }\n    assignDragKeys = () => {\n        this._dragKeys = {\n            up: this.Settings.dragKeys.up.map((k) => k.toLowerCase()),\n            down: this.Settings.dragKeys.down.map((k) => k.toLowerCase()),\n            left: this.Settings.dragKeys.left.map((k) => k.toLowerCase()),\n            right: this.Settings.dragKeys.right.map((k) => k.toLowerCase()),\n        };\n        this._dragKeysFlat = [\n            ...this._dragKeys.up,\n            ...this._dragKeys.down,\n            ...this._dragKeys.left,\n            ...this._dragKeys.right,\n        ];\n    };\n    keyboardDrag = ({ event, key, }) => {\n        const _key = key.toLowerCase();\n        if (!this.Settings.keyboardDrag ||\n            !this._dragKeysFlat.includes(_key) ||\n            !this.DS.SelectedSet.size ||\n            !this.Settings.draggability ||\n            this.DS.continue)\n            return;\n        const publishData = {\n            event,\n            isDragging: true,\n            isDraggingKeyboard: true,\n            key,\n        };\n        this.PS.publish(['Interaction:start:pre', 'Interaction:start'], publishData);\n        this._elements = this.DS.getSelection();\n        this._selectionRect = this.DS.Selection.boundingRect;\n        this.handleZIndex(true);\n        let posDirection = handleKeyboardDragPosDifference({\n            shiftKey: this.DS.stores.KeyStore.currentValues.includes('shift'),\n            keyboardDragSpeed: this.Settings.keyboardDragSpeed,\n            zoom: this.Settings.zoom,\n            key: _key,\n            scrollDiff: this._scrollDiff,\n            dragKeys: this._dragKeys,\n        });\n        posDirection = limitDirection({\n            direction: posDirection,\n            containerRect: this.DS.SelectorArea.rect,\n            scrollAmount: this.DS.stores.ScrollStore.scrollAmount,\n            selectionRect: this._selectionRect,\n        });\n        this.moveElements(posDirection);\n        this.PS.publish(['Interaction:update:pre', 'Interaction:update'], publishData);\n    };\n    keyboardEnd = ({ event, key, }) => {\n        const _key = key.toLowerCase();\n        if (!this.Settings.keyboardDrag ||\n            !this._dragKeysFlat.includes(_key) ||\n            !this.DS.SelectedSet.size ||\n            !this.Settings.draggability)\n            return;\n        const publishData = {\n            event,\n            isDragging: this.Settings.draggability,\n            isDraggingKeyboard: true,\n            key,\n        };\n        this.PS.publish(['Interaction:end:pre', 'Interaction:end'], publishData);\n    };\n    start = ({ isDragging, isDraggingKeyboard, }) => {\n        if (!isDragging || isDraggingKeyboard)\n            return;\n        this._prevCursorPos = undefined;\n        this._prevScrollPos = undefined;\n        this._elements = this.DS.getSelection();\n        this._selectionRect = this.DS.Selection.boundingRect;\n        this.handleZIndex(true);\n    };\n    stop = () => {\n        this._prevCursorPos = undefined;\n        this._prevScrollPos = undefined;\n        this.handleZIndex(false);\n        this._elements = [];\n    };\n    update = ({ isDragging, isDraggingKeyboard, }) => {\n        if (!isDragging ||\n            !this._elements.length ||\n            isDraggingKeyboard ||\n            this.DS.continue)\n            return;\n        let posDirection = calcVect(this._cursorDiff, '+', this._scrollDiff);\n        posDirection = limitDirection({\n            direction: posDirection,\n            containerRect: this.DS.SelectorArea.rect,\n            scrollAmount: this.DS.stores.ScrollStore.scrollAmount,\n            selectionRect: this._selectionRect,\n        });\n        this.moveElements(posDirection);\n    };\n    handleZIndex = (add) => {\n        this._elements.forEach((element) => (element.style.zIndex = `${(parseInt(element.style.zIndex) || 0) + (add ? 9999 : -9998)}`));\n    };\n    moveElements = (posDirection) => {\n        // [PUBLICLY EXPOSED METHOD]\n        const { elements, direction } = this.filterDragElements({\n            elements: this._elements,\n            direction: posDirection,\n        });\n        elements.forEach((element) => {\n            moveElement({\n                element,\n                posDirection: direction,\n                containerRect: this.DS.SelectorArea.rect,\n                useTransform: this.Settings.useTransform,\n            });\n        });\n    };\n    get _cursorDiff() {\n        const currentPointerVal = this.DS.stores.PointerStore.currentVal;\n        const cursorDiff = this._prevCursorPos\n            ? calcVect(currentPointerVal, '-', this._prevCursorPos)\n            : { x: 0, y: 0 };\n        this._prevCursorPos = currentPointerVal;\n        return cursorDiff;\n    }\n    get _scrollDiff() {\n        const currentScrollVal = this.DS.stores.ScrollStore.currentVal;\n        const scrollDiff = this._prevScrollPos\n            ? calcVect(currentScrollVal, '-', this._prevScrollPos)\n            : { x: 0, y: 0 };\n        this._prevScrollPos = currentScrollVal;\n        return scrollDiff;\n    }\n    ////\n    // [PUBLICLY EXPOSED METHODS]\n    /**\n     * Can be overridden to apply further filtering logic after the items to move are identified but before they actually get moved\n     * Is expected to return the elements in the same shape as passed in\n     */\n    filterDragElements = ({ elements, direction, }) => ({\n        elements,\n        direction,\n    });\n}\n\nconst isCollision = (el1, el2, percent = 0) => {\n    if (!el1 || !el2)\n        return false;\n    let element1 = el1;\n    if (percent > 0) {\n        const widthPoint = (el1.right - el1.left) * percent;\n        const heightPoint = (el1.bottom - el1.top) * percent;\n        element1 = {\n            left: el1.left + widthPoint,\n            right: el1.right - widthPoint,\n            top: el1.top + heightPoint,\n            bottom: el1.bottom - heightPoint,\n        };\n    }\n    if (element1.left < el2.right && // 1.\n        element1.right > el2.left && // 2.\n        element1.top < el2.bottom && // 3.\n        element1.bottom > el2.top // 4.\n    )\n        return true;\n    // collision detected!\n    return false;\n};\n\nconst ensureArray = input => {\n    if (!input)\n        return [];\n    if (!Array.isArray(input) && typeof input[Symbol.iterator] !== 'function')\n        return [input];\n    return [...new Set([...input])];\n};\n\nclass DropZone {\n    id;\n    element;\n    _droppables;\n    _rect;\n    _observers;\n    _timeout;\n    _itemsDropped = [];\n    _itemsInside;\n    DS;\n    PS;\n    Settings;\n    isDestroyed = false;\n    _parentNodes;\n    constructor({ DS, PS, id, element, droppables, }) {\n        this.DS = DS;\n        this.PS = PS;\n        this.Settings = this.DS.stores.SettingsStore.s;\n        this.id = id;\n        this.element = element;\n        if (droppables)\n            this.droppables = ensureArray(droppables);\n        this.element.classList.add(`${this.Settings.dropZoneClass}`);\n        this.PS.subscribe('Settings:updated:dropZoneClass', ({ settings }) => {\n            if (!this.element)\n                return;\n            this.element.classList.remove(settings['dropZoneClass:pre']);\n            this.element.classList.add(settings.dropZoneClass);\n        });\n        this._observers = addModificationObservers(this.parentNodes, debounce(() => (this._rect = undefined), this.Settings.refreshMemoryRate));\n        this.PS.subscribe('Interaction:start', this.start);\n        this.PS.subscribe('Interaction:end', this.stop);\n    }\n    setReadyClasses = (action) => {\n        if (this.isDestroyed)\n            return;\n        const selectedEls = this.droppables.filter((el) => this.DS.SelectedSet.has(el));\n        if (!selectedEls.length)\n            return;\n        selectedEls.forEach((item) => {\n            item.classList[action](`${this.Settings.droppableClass}`);\n            item.classList[action](`${this.Settings.droppableClass}-${this.id}`);\n        });\n        this.element.classList[action](`${this.Settings.dropZoneReadyClass}`);\n    };\n    /** This zone is NOT the target of a drop */\n    handleNoDrop = () => {\n        if (this.isDestroyed)\n            return;\n        // for each selected element that is not part of the target zone, remove the classes\n        this.DS.SelectedSet.forEach((item) => {\n            item.classList.remove(this.Settings.droppedTargetClass);\n            item.classList.remove(`${this.Settings.droppedTargetClass}-${this.id}`);\n        });\n        // and remove them from the zones dropped items\n        this._itemsDropped = this._itemsDropped.filter((item) => !this.DS.SelectedSet.has(item));\n        // if the zone has no dropped left, also remove the zones class\n        if (!this._itemsDropped?.length)\n            this.element.classList.remove(`${this.Settings.dropZoneTargetClass}`);\n    };\n    /** This zone IS the target of a drop */\n    handleDrop = () => {\n        if (this.isDestroyed)\n            return;\n        this._itemsDropped = [\n            ...new Set([\n                ...this._itemsDropped,\n                ...this.droppables?.filter((item) => this.DS.SelectedSet.has(item)),\n            ]),\n        ];\n        // add the target class to the zones dropped items\n        this._itemsDropped?.forEach((item) => {\n            item.classList.add(`${this.Settings.droppedTargetClass}`);\n            item.classList.add(`${this.Settings.droppedTargetClass}-${this.id}`);\n        });\n        // if the zone has dropped, add the zones class\n        if (this._itemsDropped?.length)\n            this.element.classList.add(`${this.Settings.dropZoneTargetClass}`);\n    };\n    handleItemsInsideClasses = () => {\n        let isAnyInside = false;\n        this.droppables.forEach((item) => {\n            if (this.itemsInside?.includes(item)) {\n                item.classList.add(`${this.Settings.droppedInsideClass}`);\n                item.classList.add(`${this.Settings.droppedInsideClass}-${this.id}`);\n                isAnyInside = true;\n            }\n            else {\n                item.classList.remove(`${this.Settings.droppedInsideClass}-${this.id}`);\n                if (!item.className.includes(`${this.Settings.droppedInsideClass}-`))\n                    item.classList.remove(`${this.Settings.droppedInsideClass}`);\n            }\n        });\n        if (isAnyInside)\n            this.element.classList.add(`${this.Settings.dropZoneInsideClass}`);\n        else\n            this.element.classList.remove(`${this.Settings.dropZoneInsideClass}`);\n    };\n    start = ({ isDragging }) => {\n        if (!isDragging || this.isDestroyed)\n            return;\n        this.setReadyClasses('add');\n    };\n    stop = ({ isDragging }) => {\n        if (!isDragging || this.isDestroyed)\n            return;\n        this.setReadyClasses('remove');\n        this.handleItemsInsideClasses();\n    };\n    destroy() {\n        this._observers?.cleanup();\n        this.element.classList.remove(`${this.Settings.dropZoneClass}`);\n        this.element.classList.remove(`${this.Settings.dropZoneTargetClass}`);\n        this.element.classList.remove(`${this.Settings.dropZoneReadyClass}`);\n        this.droppables.forEach((item) => {\n            item.classList.remove(`${this.Settings.droppedTargetClass}`);\n            item.classList.remove(`${this.Settings.droppedTargetClass}-${this.id}`);\n            item.classList.remove(`${this.Settings.droppableClass}`);\n            item.classList.remove(`${this.Settings.droppableClass}-${this.id}`);\n        });\n        this.PS.unsubscribe('Interaction:start', this.start);\n        this.PS.unsubscribe('Interaction:end', this.stop);\n        this.isDestroyed = true;\n    }\n    toObject = () => ({\n        id: this.id,\n        element: this.element,\n        droppables: this.droppables,\n        itemsDropped: this.itemsDropped,\n        itemsInside: this.itemsInside,\n    });\n    get rect() {\n        if (this.isDestroyed)\n            return undefined;\n        if (this._rect)\n            return this._rect;\n        return (this._rect = this.element.getBoundingClientRect());\n    }\n    get itemsDropped() {\n        if (this.isDestroyed)\n            return undefined;\n        return this._itemsDropped;\n    }\n    get itemsInside() {\n        if (this.isDestroyed)\n            return undefined;\n        if (this._itemsInside)\n            return this._itemsInside;\n        this._itemsInside = this.droppables.flatMap((item) => {\n            const itemRect = this.DS.SelectableSet.rects.get(item);\n            if (this.rect &&\n                isCollision(itemRect, this.rect, this.Settings.dropInsideThreshold))\n                return [item];\n            return [];\n        });\n        // since elements can be moved while this getter is called, we need to update the values every X seconds\n        if (this._timeout)\n            clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => (this._itemsInside = undefined), this.Settings.refreshMemoryRate);\n        return this._itemsInside;\n    }\n    get parentNodes() {\n        if (this._parentNodes)\n            return this._parentNodes;\n        return (this._parentNodes = getAllParentNodes(this.element));\n    }\n    get droppables() {\n        if (this._droppables)\n            return this._droppables;\n        return this.DS.SelectableSet.elements;\n    }\n    set droppables(value) {\n        this._droppables = value;\n    }\n}\n\nclass DropZones {\n    /** Get the drop zone by the zone element */\n    _zoneByElement = new Map();\n    /** Get the drop zone by the zone id */\n    _zoneById = new Map();\n    /** Get the drop zones by one zone item */\n    _zonesByDroppable = new Map();\n    /** Get the drop zones by one zone item */\n    _zones;\n    DS;\n    PS;\n    Settings;\n    constructor({ DS, PS }) {\n        this.DS = DS;\n        this.PS = PS;\n        this.Settings = this.DS.stores.SettingsStore.s;\n        this.PS.subscribe('Settings:updated:dropZones', ({ settings }) => this.setDropZones(settings));\n        this.setDropZones({ dropZones: this.Settings.dropZones });\n        this.PS.subscribe('Interaction:end', this.stop);\n    }\n    setDropZones = ({ dropZones, }) => {\n        if (!dropZones)\n            return;\n        if (this._zones)\n            this._zones.forEach((zone) => zone.destroy());\n        this._zones = dropZones.map((zone) => new DropZone({ DS: this.DS, PS: this.PS, ...zone }));\n        this._zones.forEach((zone) => {\n            this._zoneByElement.set(zone.element, zone);\n            this._zoneById.set(zone.id, zone);\n            zone.droppables.forEach((droppable) => {\n                const zones = this._zonesByDroppable.get(droppable);\n                if (!zones?.length)\n                    return this._zonesByDroppable.set(droppable, [zone]);\n                this._zonesByDroppable.set(droppable, [...new Set([...zones, zone])]);\n            });\n        });\n    };\n    _handleDrops = (target) => {\n        this._zones?.forEach((zone) => {\n            if (zone !== target)\n                zone.handleNoDrop();\n        });\n        if (!target)\n            return;\n        target.handleDrop();\n    };\n    _getZoneByElementsFromPoint = (elements, { x, y }) => {\n        for (let i = 0, il = elements.length; i < il; i++) {\n            const zone = this._zoneByElement.get(elements[i]);\n            if (isCollision(zone?.rect, { left: x, right: x, top: y, bottom: y }, Math.min(this.Settings.dropTargetThreshold, 0.5)))\n                return zone;\n        }\n    };\n    stop = ({ isDragging, isDraggingKeyboard, event, }) => {\n        if (!isDragging)\n            return;\n        const target = this.getTarget({ isDraggingKeyboard, event });\n        this._handleDrops(target);\n    };\n    /// ///////////////////////////////////////////////////////////////////////////////////\n    // Getters\n    getItemsDroppedById = (zoneId) => {\n        const zone = this._zoneById.get(zoneId);\n        if (!zone)\n            return console.warn(`[DragSelect] No zone found (id: ${zoneId})`);\n        return zone.itemsDropped;\n    };\n    getItemsInsideById = (zoneId, addClasses) => {\n        const zone = this._zoneById.get(zoneId);\n        if (!zone)\n            return console.warn(`[DragSelect] No zone found (id: ${zoneId})`);\n        if (addClasses)\n            zone.handleItemsInsideClasses();\n        return zone.itemsInside;\n    };\n    getKeyboardItemCenter = (isDraggingKeyboard, event) => {\n        if (!isDraggingKeyboard || !event)\n            return;\n        const rect = event.target?.getBoundingClientRect();\n        // center of rect\n        const x = rect.left + rect.width / 2;\n        const y = rect.top + rect.height / 2;\n        return { x, y };\n    };\n    /** Returns first DropsZone under current pointer or coordinates if passed */\n    getTarget = ({ coordinates, isDraggingKeyboard, event, }) => {\n        if (!this._zones?.length)\n            return;\n        let keyboardCoordinates;\n        if (!coordinates && isDraggingKeyboard && event) {\n            keyboardCoordinates = this.getKeyboardItemCenter(isDraggingKeyboard, event);\n        }\n        const x = coordinates?.x ||\n            keyboardCoordinates?.x ||\n            this.DS.stores.PointerStore.currentVal.x;\n        const y = coordinates?.y ||\n            keyboardCoordinates?.y ||\n            this.DS.stores.PointerStore.currentVal.y;\n        const elements = document.elementsFromPoint(x, y);\n        return this._getZoneByElementsFromPoint(elements, { x, y });\n    };\n}\n\nclass Interaction {\n    isInteracting;\n    isDragging = false;\n    DS;\n    PS;\n    Settings;\n    constructor({ DS, PS }) {\n        this.DS = DS;\n        this.PS = PS;\n        this.Settings = this.DS.stores.SettingsStore.s;\n        // not on every modification, just on change of area\n        this.PS.subscribe('Settings:updated:area', ({ settings }) => {\n            this.removeAreaEventListeners(settings['area:pre']);\n            this.setAreaEventListeners(settings['area']);\n        });\n        this.PS.subscribe('PointerStore:updated', ({ event }) => this.update({ event }));\n        this.PS.subscribe('Selectable:click', this.onClick);\n        this.PS.subscribe('Selectable:pointer', ({ event }) => this.start(event));\n        this.PS.subscribe('Interaction:start:pre', ({ event }) => this._start(event));\n        this.PS.subscribe('Interaction:init:pre', this._init);\n        this.PS.subscribe('Interaction:end:pre', ({ event }) => this._reset(event));\n        this.PS.subscribe('Area:scroll', this.update);\n    }\n    init = () => this.PS.publish('Interaction:init:pre', { init: true });\n    _init = () => {\n        this.stop();\n        this.setAreaEventListeners();\n        this.PS.publish('Interaction:init', { init: true });\n    };\n    _canInteract(event) {\n        const isKeyboardClick = 'clientX' in event &&\n            event.clientX === 0 &&\n            event.clientY === 0 &&\n            event.detail === 0 &&\n            event.target;\n        if (('button' in event && event.button === 2) || // right-clicks\n            this.isInteracting || // fix double-click issues\n            (event.target && !this.DS.SelectorArea.isInside(event.target)) || // fix outside elements issue\n            (!isKeyboardClick && !this.DS.SelectorArea.isClicked(event)) // make sure the mouse click is inside the area\n        )\n            return false;\n        return true;\n    }\n    start = (event) => this.PS.publish('Interaction:start:pre', {\n        event: event,\n        isDragging: this.isDragging,\n    });\n    _start = (event) => {\n        if (event.type === 'touchstart')\n            event.preventDefault(); // Call preventDefault() to prevent double click issue, see https://github.com/ThibaultJanBeyer/DragSelect/pull/29 & https://developer.mozilla.org/vi/docs/Web/API/Touch_events/Supporting_both_TouchEvent_and_MouseEvent\n        if (!this._canInteract(event))\n            return;\n        this.isInteracting = true;\n        this.isDragging = this.isDragEvent(event);\n        this.PS.publish('Interaction:start', {\n            event,\n            isDragging: this.isDragging,\n        });\n        this.setDocEventListeners();\n    };\n    isDragEvent = (event) => {\n        let clickedElement = null;\n        if (event.target && 'closest' in event.target)\n            clickedElement = event.target.closest(`.${this.Settings.selectableClass}`);\n        if (!this.Settings.draggability ||\n            this.DS.stores.KeyStore.isMultiSelectKeyPressed(event) ||\n            !clickedElement)\n            return false;\n        if (this.Settings.immediateDrag) {\n            if (!this.DS.SelectedSet.size)\n                this.DS.SelectedSet.add(clickedElement);\n            else if (!this.DS.SelectedSet.has(clickedElement)) {\n                this.DS.SelectedSet.clear();\n                this.DS.SelectedSet.add(clickedElement);\n            }\n        }\n        if (this.DS.SelectedSet.has(clickedElement))\n            return true;\n        return false;\n    };\n    /**\n     * Triggers when a node is actively selected: <button> nodes that are pressed via the keyboard.\n     * Making DragSelect accessible for everyone!\n     */\n    onClick = ({ event }) => {\n        if (!this._canInteract(event))\n            return;\n        if (event.detail > 0)\n            return; // mouse interaction\n        const { stores: { PointerStore, KeyStore }, SelectableSet, SelectedSet, } = this.DS;\n        PointerStore.start(event);\n        const node = event.target;\n        if (node && !SelectableSet.has(node))\n            return;\n        if (!KeyStore.isMultiSelectKeyPressed(event))\n            SelectedSet.clear();\n        if (node)\n            SelectedSet.toggle(node);\n        this.reset(event); // simulate mouse-up (that does not exist on keyboard)\n    };\n    stop = (area = this.DS.Area.HTMLNode) => {\n        this.removeAreaEventListeners(area);\n        this.removeDocEventListeners();\n    };\n    update = ({ event, scroll_directions, scroll_multiplier, }) => {\n        if (this.isInteracting)\n            this.PS.publish(['Interaction:update:pre', 'Interaction:update'], {\n                event,\n                scroll_directions,\n                scroll_multiplier,\n                isDragging: this.isDragging,\n            });\n    };\n    reset = (event) => this.PS.publish('Interaction:end:pre', {\n        event,\n        isDragging: this.isDragging,\n    });\n    _reset = (event) => {\n        const { isDragging } = this;\n        this.isInteracting = false;\n        this.isDragging = false;\n        this.removeDocEventListeners();\n        this.PS.publish('Interaction:end', { event, isDragging });\n    };\n    //////////////////////////////////////////////////////////////////////////////////////\n    // Event Listeners\n    setAreaEventListeners = (area = this.DS.Area.HTMLNode) => {\n        // @TODO: fix pointer events mixing issue see [PR](https://github.com/ThibaultJanBeyer/DragSelect/pull/128#issuecomment-1154885289)\n        if (this.Settings.usePointerEvents)\n            area.addEventListener('pointerdown', this.start, {\n                passive: false,\n            });\n        else\n            area.addEventListener('mousedown', this.start);\n        area.addEventListener('touchstart', this.start, {\n            passive: false,\n        });\n    };\n    removeAreaEventListeners = (area = this.DS.Area.HTMLNode) => {\n        // @TODO: fix pointer events mixing issue see [PR](https://github.com/ThibaultJanBeyer/DragSelect/pull/128#issuecomment-1154885289)\n        if (this.Settings.usePointerEvents) {\n            area.removeEventListener('pointerdown', this.start, {\n                // @ts-ignore\n                passive: false,\n            });\n        }\n        else\n            area.removeEventListener('mousedown', this.start);\n        area.removeEventListener('touchstart', this.start, {\n            // @ts-ignore\n            passive: false,\n        });\n    };\n    setDocEventListeners = () => {\n        // @TODO: fix pointer events mixing issue see [PR](https://github.com/ThibaultJanBeyer/DragSelect/pull/128#issuecomment-1154885289)\n        if (this.Settings.usePointerEvents) {\n            document.addEventListener('pointerup', this.reset);\n            document.addEventListener('pointercancel', this.reset);\n        }\n        else\n            document.addEventListener('mouseup', this.reset);\n        document.addEventListener('touchend', this.reset);\n    };\n    removeDocEventListeners = () => {\n        // @TODO: fix pointer events mixing issue see [PR](https://github.com/ThibaultJanBeyer/DragSelect/pull/128#issuecomment-1154885289)\n        if (this.Settings.usePointerEvents) {\n            document.removeEventListener('pointerup', this.reset);\n            document.removeEventListener('pointercancel', this.reset);\n        }\n        else\n            document.removeEventListener('mouseup', this.reset);\n        document.removeEventListener('touchend', this.reset);\n    };\n}\n\nclass KeyStore {\n    _currentValues = new Set();\n    _keyMapping = {\n        control: 'ctrlKey',\n        shift: 'shiftKey',\n        meta: 'metaKey',\n    };\n    DS;\n    PS;\n    settings;\n    /**\n     * @class KeyStore\n     * @constructor KeyStore\n     * @ignore\n     */\n    constructor({ DS, PS }) {\n        this.DS = DS;\n        this.PS = PS;\n        this.settings = this.DS.stores.SettingsStore.s;\n        this.PS.subscribe('Interaction:init', this.init);\n    }\n    init = () => {\n        document.addEventListener('keydown', this.keydown);\n        document.addEventListener('keyup', this.keyup);\n        window.addEventListener('blur', this.reset);\n    };\n    keydown = (event) => {\n        if (!event.key?.toLocaleLowerCase)\n            return;\n        const key = event.key.toLowerCase();\n        this.PS.publish('KeyStore:down:pre', { event, key });\n        this._currentValues.add(key);\n        this.PS.publish('KeyStore:down', { event, key });\n    };\n    keyup = (event) => {\n        if (!event.key?.toLocaleLowerCase)\n            return;\n        const key = event.key.toLowerCase();\n        this.PS.publish('KeyStore:up:pre', { event, key });\n        this._currentValues.delete(key);\n        this.PS.publish('KeyStore:up', { event, key });\n    };\n    stop = () => {\n        document.removeEventListener('keydown', this.keydown);\n        document.removeEventListener('keyup', this.reset);\n        window.removeEventListener('blur', this.reset);\n        this.reset();\n    };\n    reset = () => this._currentValues.clear();\n    isMultiSelectKeyPressed(event) {\n        if (this.settings.multiSelectMode)\n            return true;\n        const multiSelectKeys = this.settings.multiSelectKeys?.map((key) => key.toLocaleLowerCase()) ?? [];\n        if (this.currentValues.some((key) => multiSelectKeys.includes(key)))\n            return true;\n        if (event && multiSelectKeys.some((key) => event[this._keyMapping[key]]))\n            return true;\n        return false;\n    }\n    get currentValues() {\n        return Array.from(this._currentValues.values());\n    }\n}\n\n/**\n * Returns cursor x, y position based on event object\n */\nconst getPointerPos = ({ event }) => ({\n    x: event.clientX,\n    y: event.clientY,\n});\n\nclass PointerStore {\n    _isMouseInteraction = false;\n    // Position relative to area\n    _initialValArea = { x: 0, y: 0 };\n    _currentValArea = { x: 0, y: 0 };\n    _lastValArea = { x: 0, y: 0 };\n    // General Pointer Position\n    _initialVal = { x: 0, y: 0 };\n    _currentVal = { x: 0, y: 0 };\n    _lastVal = { x: 0, y: 0 };\n    _lastTouch;\n    DS;\n    PS;\n    settings;\n    constructor({ DS, PS }) {\n        this.DS = DS;\n        this.PS = PS;\n        this.settings = this.DS.stores.SettingsStore.s;\n        this.PS.subscribe('Interaction:init', this.init);\n        this.PS.subscribe('Interaction:start', ({ event }) => this.start(event));\n        this.PS.subscribe('Interaction:end', ({ event }) => this.reset(event));\n    }\n    init = () => {\n        if (this.settings.usePointerEvents)\n            document.addEventListener('pointermove', this.update, { passive: false });\n        else\n            document.addEventListener('mousemove', this.update);\n        document.addEventListener('touchmove', this.update, { passive: false });\n    };\n    start(event) {\n        if (!event)\n            return;\n        this._isMouseInteraction = true;\n        this.currentVal = this.initialVal = this.getPointerPosition(event);\n    }\n    getPointerPosition = (event) => getPointerPos({\n        event: this._normalizedEvent(event),\n    });\n    update = (event) => {\n        // type Event to satisfy event listeners, but we know type is : event as InteractionEvent\n        if (!event)\n            return;\n        this.PS.publish('PointerStore:updated:pre', {\n            event: event,\n        });\n        this.currentVal = this.getPointerPosition(event);\n        if (!this._isMouseInteraction)\n            return;\n        this.PS.publish('PointerStore:updated', {\n            event: event,\n        });\n    };\n    stop = () => {\n        // @TODO: fix pointer events mixing issue see [PR](https://github.com/ThibaultJanBeyer/DragSelect/pull/128#issuecomment-1154885289)\n        if (this.settings.usePointerEvents)\n            document.removeEventListener('pointermove', this.update, {\n                // @ts-ignore\n                passive: false,\n            });\n        else\n            document.removeEventListener('mousemove', this.update);\n        document.removeEventListener('touchmove', this.update, {\n            // @ts-ignore\n            passive: false,\n        });\n        this.reset();\n    };\n    reset = (event) => {\n        this.currentVal = this.lastVal = this.getPointerPosition(event);\n        // debounce in order \"onClick\" to work\n        setTimeout(() => (this._isMouseInteraction = false), 100);\n    };\n    _normalizedEvent(event) {\n        // null KeyboardEvents\n        if (!event || event instanceof KeyboardEvent)\n            return { clientX: 0, clientY: 0 };\n        // touchend has not touches. so we take the last touch if a touchevent, we need to store the positions\n        if ('touches' in event) {\n            if (event.type !== 'touchend')\n                this._lastTouch = event;\n            // if a touchevent, return the last touch rather than the regular event\n            // as we need .touches[0] from that event\n            return this._lastTouch?.touches[0] || event.touches[0];\n        }\n        return event;\n    }\n    /** First recorded pointer position within the area */\n    get initialValArea() {\n        if (!this._initialValArea)\n            return { x: 0, y: 0 };\n        return this._initialValArea;\n    }\n    /** Current pointer position within the area */\n    get currentValArea() {\n        if (!this._currentValArea)\n            return { x: 0, y: 0 };\n        return this._currentValArea;\n    }\n    /** Last recorded pointer position within the area */\n    get lastValArea() {\n        if (!this._lastValArea)\n            return { x: 0, y: 0 };\n        return this._lastValArea;\n    }\n    /** First recorded pointer position */\n    get initialVal() {\n        if (!this._initialVal)\n            return { x: 0, y: 0 };\n        return this._initialVal;\n    }\n    /** Current pointer position */\n    get currentVal() {\n        if (!this._currentVal)\n            return { x: 0, y: 0 };\n        return this._currentVal;\n    }\n    /** Last recorded pointer position */\n    get lastVal() {\n        if (!this._lastVal)\n            return { x: 0, y: 0 };\n        return this._lastVal;\n    }\n    set initialVal(value) {\n        this._initialVal = value;\n        this._initialValArea =\n            value &&\n                calcVect(value, '-', calcVect(rect2vect(this.DS.Area.rect), '+', rect2vect(this.DS.Area.computedBorder)));\n    }\n    set currentVal(value) {\n        this._currentVal = value;\n        this._currentValArea =\n            value &&\n                calcVect(value, '-', calcVect(rect2vect(this.DS.Area.rect), '+', rect2vect(this.DS.Area.computedBorder)));\n    }\n    set lastVal(value) {\n        this._lastVal = value;\n        this._lastValArea =\n            value &&\n                calcVect(value, '-', calcVect(rect2vect(this.DS.Area.rect), '+', rect2vect(this.DS.Area.computedBorder)));\n    }\n}\n\nclass PubSub {\n    subscribers = {};\n    DS;\n    constructor({ DS }) {\n        this.DS = DS;\n    }\n    /**\n     * Subscribe to an event\n     * @returns event id, can be used to unsubscribe more efficiently\n     */\n    subscribe = (eventName, callback) => {\n        if (!Array.isArray(this.subscribers[eventName]))\n            this.subscribers[eventName] = [];\n        const subscribers = this.subscribers[eventName];\n        subscribers.push(callback);\n        return subscribers.length - 1;\n    };\n    /**\n     * Removes event subscription\n     * @param callback the callback method signature, has to be exactly the same as when subscribing. Consider using \"id\" instead.\n     * @param id event id returned when subscribed (more performant than callback search)\n     */\n    unsubscribe = (eventName, callback, id) => {\n        const index = id ?? this.subscribers[eventName]?.findIndex((cb) => cb === callback);\n        this.subscribers[eventName]?.splice(Number(index), 1);\n    };\n    /**\n     * Publishes an event to all subscribers\n     * @param eventName\n     * @param data passed to the subscription method\n     */\n    publish = (eventName, data) => {\n        if (Array.isArray(eventName))\n            eventName.forEach((name) => this._publish(name, data));\n        else\n            this._publish(eventName, data);\n    };\n    _publish = (eventName, data) => {\n        const subscribers = this.subscribers[eventName] ?? [];\n        if (eventName.includes(`:pre`))\n            this._handlePrePublish(subscribers, data);\n        else\n            this._handlePublish(subscribers, data);\n    };\n    // non-pre events are executed first in first out\n    _handlePublish = (subscribers, data) => {\n        for (let i = 0, il = subscribers.length; i < il; i++) {\n            if (this.DS.stopped)\n                return;\n            subscribers[i]?.(data);\n        }\n    };\n    // pre events are executed last in first out (so user callbacks are called before DS callbacks)\n    _handlePrePublish = (subscribers, data) => {\n        let i = subscribers.length;\n        while (i--) {\n            if (this.DS.stopped)\n                return;\n            subscribers[i]?.(data);\n        }\n    };\n}\n\nconst getDocumentScroll = () => ({\n    y: document.body?.scrollTop || document.documentElement?.scrollTop || 0,\n    x: document.body?.scrollLeft || document.documentElement?.scrollLeft || 0,\n});\n\nconst getCurrentScroll = area => {\n    if (!area || area instanceof Document)\n        return getDocumentScroll();\n    return {\n        x: area.scrollLeft >= 0 ? area.scrollLeft : getDocumentScroll().x,\n        y: area.scrollTop >= 0 ? area.scrollTop : getDocumentScroll().y,\n    };\n};\n\nconst canScroll = area => {\n    const scroll = getCurrentScroll(area);\n    if (scroll.x || scroll.y)\n        return true;\n    if (area instanceof Document) {\n        if (area.body)\n            return _canScroll(area.body);\n        return _canScroll(area.documentElement);\n    }\n    return _canScroll(area);\n};\n// @TODO: Determine if there is a better way to test scrollability\nconst _canScroll = (el) => {\n    const currentScrollTop = el.scrollTop;\n    const canScroll = Boolean(el.scrollTop = 1);\n    el.scrollTop = currentScrollTop;\n    return canScroll;\n};\n\nclass ScrollStore {\n    _initialVal = { x: 0, y: 0 };\n    _currentVal = { x: 0, y: 0 };\n    _canScroll;\n    DS;\n    PS;\n    Settings;\n    constructor({ DS, PS }) {\n        this.DS = DS;\n        this.PS = PS;\n        this.Settings = this.DS.stores.SettingsStore.s;\n        this.PS.subscribe('Area:modified', () => {\n            this.stop();\n            this.init();\n        });\n        this.PS.subscribe('Interaction:init', this.init);\n        this.PS.subscribe('Interaction:start', () => this.start());\n        this.PS.subscribe('Interaction:end', () => this.reset());\n    }\n    init = () => this.addListeners();\n    addListeners = () => this.DS.Area.HTMLNode.addEventListener('scroll', this.update);\n    removeListeners = () => this.DS.Area.HTMLNode.removeEventListener('scroll', this.update);\n    start = () => {\n        this._currentVal = this._initialVal = getCurrentScroll(this.DS.Area.HTMLNode);\n    };\n    update = () => (this._currentVal = getCurrentScroll(this.DS.Area.HTMLNode));\n    stop = () => {\n        this.reset();\n        this.removeListeners();\n    };\n    reset = () => {\n        this._initialVal = { x: 0, y: 0 };\n        this._canScroll = undefined;\n    };\n    get canScroll() {\n        if (typeof this._canScroll === 'boolean')\n            return this._canScroll;\n        return (this._canScroll = canScroll(this.DS.Area.HTMLNode));\n    }\n    get scrollAmount() {\n        const scrollDiff = calcVect(this.currentVal, '-', this.initialVal);\n        // if area is zoomed, the scroll values are skewed, we need to fix that manually :(\n        const zoom = num2vect(this.Settings.zoom);\n        const zoomScroll = calcVect(calcVect(scrollDiff, '*', zoom), '-', scrollDiff);\n        return {\n            x: scrollDiff.x + zoomScroll.x,\n            y: scrollDiff.y + zoomScroll.y,\n        };\n    }\n    get initialVal() {\n        if (!this._initialVal)\n            return { x: 0, y: 0 };\n        return this._initialVal;\n    }\n    get currentVal() {\n        if (!this._currentVal)\n            this._currentVal = getCurrentScroll(this.DS.Area.HTMLNode);\n        return this._currentVal;\n    }\n}\n\nclass SelectableSet extends Set {\n    _rects;\n    _timeout;\n    DS;\n    PS;\n    Settings;\n    constructor({ DS, PS }) {\n        super();\n        this.DS = DS;\n        this.PS = PS;\n        this.Settings = this.DS.stores.SettingsStore.s;\n        this.PS.subscribe('Interaction:init', this.init);\n        this.PS.subscribe('Settings:updated:selectables', () => {\n            this.clear();\n            this.init();\n        });\n        this.PS.subscribe('Settings:updated:selectableClass', ({ settings }) => {\n            this.forEach((el) => {\n                el.classList.remove(settings['selectableClass:pre']);\n                el.classList.add(settings.selectableClass);\n            });\n        });\n    }\n    init = () => ensureArray(this.Settings.selectables).forEach((el) => this.add(el));\n    add(element) {\n        if (!element || super.has(element))\n            return this;\n        const publishData = {\n            items: this.elements,\n            item: element,\n        };\n        this.PS.publish('Selectable:added:pre', publishData);\n        element.classList.add(this.Settings.selectableClass);\n        element.addEventListener('click', this._onClick);\n        if (this.Settings.usePointerEvents)\n            element.addEventListener('pointerdown', this._onPointer, { passive: false });\n        else\n            element.addEventListener('mousedown', this._onPointer);\n        element.addEventListener('touchstart', this._onPointer, { passive: false });\n        if (this.Settings.draggability && !this.Settings.useTransform)\n            handleElementPositionAttribute({\n                computedStyle: window.getComputedStyle(element),\n                node: element,\n            });\n        this.PS.publish('Selectable:added', publishData);\n        return super.add(element);\n    }\n    delete(element) {\n        if (!element || !super.has(element))\n            return true;\n        const publishData = {\n            items: this.elements,\n            item: element,\n        };\n        this.PS.publish('Selectable:removed:pre', publishData);\n        element.classList.remove(this.Settings.selectableClass);\n        element.classList.remove(this.Settings.hoverClass);\n        element.removeEventListener('click', this._onClick);\n        if (this.Settings.usePointerEvents)\n            element.removeEventListener('pointerdown', this._onPointer, {\n                // @ts-ignore\n                passive: false,\n            });\n        else\n            element.removeEventListener('mousedown', this._onPointer);\n        element.removeEventListener('touchstart', this._onPointer, {\n            // @ts-ignore\n            passive: false,\n        });\n        this.PS.publish('Selectable:removed', publishData);\n        return super.delete(element);\n    }\n    clear = () => this.forEach((el) => this.delete(el));\n    _onClick = (event) => // we know it’s only a MouseEvent\n     this.PS.publish(['Selectable:click:pre', 'Selectable:click'], { event: event });\n    _onPointer = (event) => // we know it’s only an InteractionEvent\n     this.PS.publish(['Selectable:pointer:pre', 'Selectable:pointer'], { event: event });\n    addAll = (elements) => elements.forEach((el) => this.add(el));\n    deleteAll = (elements) => elements.forEach((el) => this.delete(el));\n    /**\n     * Gets the bounding rect from private memory if available. If not gets it from the DOM.\n     * => Does not force rect calculation on all elements\n     */\n    getElementRect = (element) => this._rects ? this._rects.get(element) : element.getBoundingClientRect();\n    get elements() {\n        return Array.from(this.values());\n    }\n    get rects() {\n        if (this._rects)\n            return this._rects;\n        this._rects = new Map();\n        this.forEach((element) => this._rects?.set(element, element.getBoundingClientRect()));\n        // since elements can be moved, we need to update the rects every X ms\n        if (this._timeout)\n            clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => (this._rects = undefined), this.Settings.refreshMemoryRate);\n        return this._rects;\n    }\n}\n\nclass SelectedSet extends Set {\n    _rects;\n    _timeout;\n    DS;\n    PS;\n    Settings;\n    constructor({ DS, PS }) {\n        super();\n        this.DS = DS;\n        this.PS = PS;\n        this.Settings = this.DS.stores.SettingsStore.s;\n    }\n    add(element) {\n        if (!element || super.has(element))\n            return this;\n        const publishData = {\n            items: this.elements,\n            item: element,\n        };\n        this.PS.publish('Selected:added:pre', publishData);\n        super.add(element);\n        element.classList.add(this.Settings.selectedClass);\n        element.style.zIndex = `${(parseInt(element.style.zIndex) || 0) + 1}`;\n        this.PS.publish('Selected:added', publishData);\n        return this;\n    }\n    delete(element) {\n        if (!element || !super.has(element))\n            return true;\n        const publishData = {\n            items: this.elements,\n            item: element,\n        };\n        this.PS.publish('Selected:removed:pre', publishData);\n        const deleted = super.delete(element);\n        element.classList.remove(this.Settings.selectedClass);\n        element.style.zIndex = `${(parseInt(element.style.zIndex) || 0) - 1}`;\n        this.PS.publish('Selected:removed', publishData);\n        return deleted;\n    }\n    clear = () => this.forEach((el) => this.delete(el));\n    /** Adds/Removes an element. If it is already selected = remove, if not = add. */\n    toggle(element) {\n        if (this.has(element))\n            this.delete(element);\n        else\n            this.add(element);\n        return element;\n    }\n    addAll = (elements) => elements.forEach((el) => this.add(el));\n    deleteAll = (elements) => elements.forEach((el) => this.delete(el));\n    get elements() {\n        return Array.from(this.values());\n    }\n    get rects() {\n        if (this._rects)\n            return this._rects;\n        this._rects = new Map();\n        this.forEach((element) => this._rects?.set(element, element.getBoundingClientRect()));\n        // since elements can be moved, we need to update the rects every X ms\n        if (this._timeout)\n            clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => (this._rects = undefined), this.Settings.refreshMemoryRate);\n        return this._rects;\n    }\n}\n\nconst createSelectorElement = (customStyles) => {\n    const selector = document.createElement('div');\n    selector.style.position = 'absolute';\n    if (!customStyles) {\n        selector.style.background = 'rgba(0, 175, 255, 0.2)';\n        selector.style.border = '1px solid rgba(0, 175, 255, 0.8)';\n        selector.style.display = 'none';\n        selector.style.pointerEvents = 'none'; // fix for issue #8 (ie11+)\n    }\n    return selector;\n};\n\n/** Reliably returns the exact x,y,w,h positions of the selector element */\nconst getSelectorPosition = ({ scrollAmount, initialPointerPos, pointerPos }) => {\n    /** check for direction\n     *\n     * This is quite complicated, so also quite complicated to explain. Lemme’ try:\n     *\n     * Problem #1:\n     * Sadly in HTML we can not have negative sizes.\n     * so if we want to scale our element 10px to the right then it is easy,\n     * we just have to add +10px to the width. But if we want to scale the element\n     * -10px to the left then things become more complicated, we have to move\n     * the element -10px to the left on the x axis and also scale the element\n     * by +10px width to fake a negative sizing.\n     *\n     * One solution to this problem is using css-transforms scale() with\n     * transform-origin of top left. BUT we can’t use this since it will size\n     * everything, then when your element has a border for example, the border will\n     * get inanely huge. Also transforms are not widely supported in IE.\n     *\n     * Example #1:\n     * Unfortunately, things get even more complicated when we are inside a scroll-able\n     * DIV. Then, let’s say we scroll to the right by 10px and move the cursor right by 5px in our\n     * checks we have to subtract 10px from the initialcursor position in our check\n     * (since the initial position is moved to the left by 10px) so in our example:\n     * 1. pointerPos.x (5) > initialPointerPos.x (0) - scrollAmount.x (10) === 5 > -10 === true\n     * then set the x position to the cursors start position\n     * selectorPos.x = initialPointerPos.x (0) - scrollAmount.x (10) === 10 // 2.\n     * then we can calculate the elements width, which is\n     * the new cursor position minus the initial one plus the scroll amount, so in our example:\n     * 3. selectorPos.w = pointerPos.x (5) - initialPointerPos.x (0) + scrollAmount.x (10) === 15;\n     *\n     * let’s say after that movement we now scroll 20px to the left and move our cursor by 30px to the left:\n     * 1b. pointerPos.x (-30) > initialPointerPos.x (0) - scrollAmount.x (-20) === -30 < --20 === -30 < +20 === false;\n     * 2b. selectorPos.x = pointerPos.x (-30) === -30; move left position to cursor (for more info see Problem #1)\n     * 3b. selectorPos.w = initialPointerPos.x (0) - pointerPos.x (-30) - scrollAmount.x (-20) === 0--30--20 === 0+30+20 === 50;  // scale width to original left position (for more info see Problem #1)\n     *\n     * same thing has to be done for top/bottom\n     *\n     * I hope that makes sense. Try stuff out and play around with variables to get a hang of it.\n     */\n    const selectorPos = {};\n    // right\n    if (pointerPos.x > initialPointerPos.x - scrollAmount.x) {\n        // 1.\n        selectorPos.left = initialPointerPos.x - scrollAmount.x; // 2.\n        selectorPos.width = pointerPos.x - initialPointerPos.x + scrollAmount.x; // 3.\n        // left\n    }\n    else {\n        // 1b.\n        selectorPos.left = pointerPos.x; // 2b.\n        selectorPos.width = initialPointerPos.x - pointerPos.x - scrollAmount.x; // 3b.\n    }\n    // bottom\n    if (pointerPos.y > initialPointerPos.y - scrollAmount.y) {\n        selectorPos.top = initialPointerPos.y - scrollAmount.y;\n        selectorPos.height = pointerPos.y - initialPointerPos.y + scrollAmount.y;\n        // top\n    }\n    else {\n        selectorPos.top = pointerPos.y;\n        selectorPos.height = initialPointerPos.y - pointerPos.y - scrollAmount.y;\n    }\n    return selectorPos;\n};\n\n/** Updates element style left, top, width, height values according to pos input object */\nvar updateElementStylePos = (element, pos) => {\n    if (pos.left)\n        element.style.left = `${pos.left}px`;\n    if (pos.top)\n        element.style.top = `${pos.top}px`;\n    if (pos.width)\n        element.style.width = `${pos.width}px`;\n    if (pos.height)\n        element.style.height = `${pos.height}px`;\n};\n\nclass Selector {\n    _rect;\n    DS;\n    PS;\n    Settings;\n    HTMLNode;\n    constructor({ DS, PS }) {\n        this.DS = DS;\n        this.PS = PS;\n        this.Settings = this.DS.stores.SettingsStore.s;\n        this.HTMLNode = this.Settings.selector; // to make TS happy, will be replaced in `attachSelector`\n        this.PS.subscribe('Settings:updated:selectorClass', ({ settings }) => {\n            this.HTMLNode.classList.remove(settings['selectorClass:pre']);\n            this.HTMLNode.classList.add(settings.selectorClass);\n        });\n        this.PS.subscribe('Settings:updated:selector', this.attachSelector);\n        this.PS.subscribe('Settings:updated:customStyles', this.attachSelector);\n        this.attachSelector();\n        this.PS.subscribe('Interaction:start', this.start);\n        this.PS.subscribe('Interaction:update', this.update);\n        this.PS.subscribe('Interaction:end', this.stop);\n    }\n    attachSelector = () => {\n        if (this.HTMLNode && this.DS.SelectorArea?.HTMLNode)\n            this.DS.SelectorArea.HTMLNode.removeChild(this.HTMLNode);\n        this.HTMLNode = this.Settings.selector || createSelectorElement(this.Settings.customStyles);\n        this.HTMLNode.classList.add(this.Settings.selectorClass);\n        if (this.HTMLNode && this.DS.SelectorArea?.HTMLNode)\n            this.DS.SelectorArea.HTMLNode.appendChild(this.HTMLNode);\n    };\n    start = ({ isDragging }) => {\n        if (isDragging)\n            return;\n        const { stores: { PointerStore }, } = this.DS;\n        const pPos = PointerStore.initialValArea;\n        updateElementStylePos(this.HTMLNode, vect2rect(pPos, 1));\n        this.HTMLNode.style.display = 'block';\n        this._rect = undefined;\n    };\n    stop = () => {\n        this.HTMLNode.style.width = '0';\n        this.HTMLNode.style.height = '0';\n        this.HTMLNode.style.display = 'none';\n    };\n    /** Moves the selection to the correct place */\n    update = ({ isDragging }) => {\n        if (isDragging || this.DS.continue)\n            return;\n        const { stores: { ScrollStore, PointerStore }, } = this.DS;\n        const pos = getSelectorPosition({\n            scrollAmount: ScrollStore.scrollAmount,\n            initialPointerPos: PointerStore.initialValArea,\n            pointerPos: PointerStore.currentValArea,\n        });\n        updateElementStylePos(this.HTMLNode, pos);\n        this._rect = undefined;\n    };\n    get rect() {\n        if (this._rect)\n            return this._rect;\n        return (this._rect = this.HTMLNode.getBoundingClientRect());\n    }\n}\n\n/** Logic when an element is selected */\nconst handleSelection = ({ element, force, multiSelectionToggle, SelectedSet, hoverClassName, }) => {\n    if (element.classList.contains(hoverClassName) && !force)\n        return;\n    if (!SelectedSet.has(element))\n        SelectedSet.add(element);\n    else if (multiSelectionToggle)\n        SelectedSet.delete(element);\n    element.classList.add(hoverClassName);\n};\n\n/** Logic when an element is de-selected */\nconst handleUnSelection = ({ element, force, SelectedSet, PrevSelectedSet, hoverClassName, }) => {\n    if (!element.classList.contains(hoverClassName) && !force)\n        return;\n    const inSelection = SelectedSet.has(element);\n    const inPrevSelection = PrevSelectedSet.has(element);\n    /**\n     * Special for issue #9.\n     * if a multi-select-key is pressed, ds 'remembers' the last selection and reverts\n     * to that state if the selection is not kept, to mimic the natural OS behaviour\n     * = if item was selected and is not in selection anymore, reselect it\n     * = if item was not selected and is not in selection anymore, unselect it\n     */\n    if (inSelection && !inPrevSelection)\n        SelectedSet.delete(element);\n    else if (!inSelection && inPrevSelection)\n        SelectedSet.add(element);\n    element.classList.remove(hoverClassName);\n};\n\n// @TODO: calculate the difference in all directions based on the mouse position! (since the selection square ratio won’t change we don’t have to re-calculate and re-fetch the position of every element in the square during drag)\n/** Returns the compound bounding rect of multiple elements */\nconst getSelectionRect = (SelectedSet) => {\n    const rect = {\n        top: Number.POSITIVE_INFINITY,\n        left: Number.POSITIVE_INFINITY,\n        bottom: Number.NEGATIVE_INFINITY,\n        right: Number.NEGATIVE_INFINITY,\n        width: Number.NEGATIVE_INFINITY,\n        height: Number.NEGATIVE_INFINITY,\n    };\n    SelectedSet.rects.forEach(elementRect => {\n        rect.top = Math.min(rect.top, elementRect.top || rect.top);\n        rect.left = Math.min(rect.left, elementRect.left || rect.left);\n        rect.bottom = Math.max(rect.bottom, elementRect.bottom || rect.bottom);\n        rect.right = Math.max(rect.right, elementRect.right || rect.right);\n    });\n    rect.height = rect.bottom - rect.top;\n    rect.width = rect.right - rect.left;\n    return rect;\n};\n\nclass Selection {\n    _prevSelectedSet = new Set();\n    _boundingRect;\n    _timeout;\n    DS;\n    PS;\n    Settings;\n    constructor({ DS, PS }) {\n        this.DS = DS;\n        this.PS = PS;\n        this.Settings = this.DS.stores.SettingsStore.s;\n        this.PS.subscribe('Interaction:start', this.start);\n        this.PS.subscribe('Interaction:update', this.update);\n    }\n    /** Stores the previous selection (solves #9) */\n    _storePrevious(event) {\n        const { stores: { KeyStore }, SelectedSet, } = this.DS;\n        if (KeyStore.isMultiSelectKeyPressed(event))\n            this._prevSelectedSet = new Set(SelectedSet);\n        else\n            this._prevSelectedSet = new Set();\n    }\n    start = ({ event, isDragging, }) => {\n        if (isDragging)\n            return;\n        this._storePrevious(event);\n        this._handleInsideSelection(true, event);\n    };\n    update = ({ isDragging }) => {\n        if (isDragging || this.DS.continue)\n            return;\n        this._handleInsideSelection();\n    };\n    /** Checks if any selectable element is inside selection. */\n    _handleInsideSelection = (force, event) => {\n        const { SelectableSet, SelectorArea, Selector } = this.DS;\n        const multiSelectionToggle = this.DS.stores.KeyStore.isMultiSelectKeyPressed(event) &&\n            this.Settings.multiSelectToggling;\n        const selectionThreshold = this.Settings.selectionThreshold;\n        const elRects = SelectableSet.rects;\n        const selectorRect = Selector.rect;\n        const select = new Map();\n        const unselect = new Map();\n        for (const [element, elementRect] of elRects) {\n            if (!SelectorArea.isInside(element, elementRect))\n                continue;\n            if (isCollision(elementRect, selectorRect, selectionThreshold))\n                select.set(element, elementRect);\n            else\n                unselect.set(element, elementRect);\n        }\n        if (this.DS.continue)\n            return;\n        // [PUBLICLY EXPOSED METHOD]\n        const { select: filteredSelect, unselect: filteredUnselect } = this.filterSelected({ select, unselect, selectorRect });\n        filteredSelect.forEach((_, element) => handleSelection({\n            element,\n            force,\n            multiSelectionToggle,\n            SelectedSet: this.DS.SelectedSet,\n            hoverClassName: this.Settings.hoverClass,\n        }));\n        filteredUnselect.forEach((_, element) => handleUnSelection({\n            element,\n            force,\n            SelectedSet: this.DS.SelectedSet,\n            hoverClassName: this.Settings.hoverClass,\n            PrevSelectedSet: this._prevSelectedSet,\n        }));\n    };\n    get boundingRect() {\n        if (this._boundingRect)\n            return this._boundingRect;\n        this._boundingRect = getSelectionRect(this.DS.SelectedSet);\n        // since elements can be moved, we need to update the rects every X ms\n        if (this._timeout)\n            clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => (this._boundingRect = undefined), this.Settings.refreshMemoryRate);\n        return this._boundingRect;\n    }\n    ////\n    // [PUBLICLY EXPOSED METHODS]\n    /**\n     * Can be overridden to apply further filtering logic after the items to select are identified but before they actually get selected\n     * Is expected to return the select / unselect maps in the same shape as passed in\n     */\n    filterSelected = ({ select, unselect, selectorRect, }) => ({ select, unselect });\n}\n\nconst createSelectorAreaElement = () => {\n    const node = document.createElement('div');\n    node.style.position = 'fixed';\n    node.style.overflow = 'hidden';\n    node.style.pointerEvents = 'none';\n    node.style.zIndex = '999999999999999999';\n    return node;\n};\n\n/**\n * Returns the edges that an element is overflowing\n */\nconst getOverflowEdges = ({ elementRect, containerRect, tolerance = {\n    x: 0,\n    y: 0,\n}, }) => {\n    const edges = [];\n    if (elementRect.top - tolerance.y < containerRect.top)\n        edges.push('top');\n    if (elementRect.left - tolerance.x < containerRect.left)\n        edges.push('left');\n    if (elementRect.bottom + tolerance.y > containerRect.bottom)\n        edges.push('bottom');\n    if (elementRect.right + tolerance.y > containerRect.right)\n        edges.push('right');\n    return edges;\n};\n\nclass SelectorArea {\n    _scrollInterval;\n    _rect;\n    currentEdges = [];\n    DS;\n    PS;\n    Settings;\n    HTMLNode;\n    constructor({ DS, PS }) {\n        this.DS = DS;\n        this.PS = PS;\n        this.Settings = this.DS.stores.SettingsStore.s;\n        this.HTMLNode = createSelectorAreaElement();\n        this.PS.subscribe('Settings:updated:selectorAreaClass', ({ settings }) => {\n            this.HTMLNode.classList.remove(settings['selectorAreaClass:pre']);\n            this.HTMLNode.classList.add(settings['selectorAreaClass']);\n        });\n        this.HTMLNode.classList.add(this.Settings.selectorAreaClass);\n        this.PS.subscribe('Area:modified', this.updatePos);\n        this.PS.subscribe('Area:modified', this.updatePos);\n        this.PS.subscribe('Interaction:init', this.init);\n        this.PS.subscribe('Interaction:start', ({ isDraggingKeyboard }) => this.startAutoScroll({ isDraggingKeyboard }));\n        this.PS.subscribe('Interaction:end', () => {\n            this.updatePos();\n            this.stopAutoScroll();\n        });\n    }\n    init = () => {\n        this.applyElements('append');\n        this.updatePos();\n    };\n    /** Adding / Removing elements to document */\n    applyElements = (method) => {\n        const docEl = document.body ? 'body' : 'documentElement';\n        const methodName = `${method}Child`;\n        this.HTMLNode[methodName](this.DS.Selector.HTMLNode);\n        document[docEl][methodName](this.HTMLNode);\n    };\n    /** Updates the selectorAreas positions to match the areas */\n    updatePos = () => {\n        this._rect = undefined;\n        const rect = this.DS.Area.rect;\n        const border = this.DS.Area.computedBorder;\n        const { style } = this.HTMLNode;\n        const top = `${rect.top + border.top}px`;\n        const left = `${rect.left + border.left}px`;\n        const width = `${rect.width}px`;\n        const height = `${rect.height}px`;\n        if (style.top !== top)\n            style.top = top;\n        if (style.left !== left)\n            style.left = left;\n        if (style.width !== width)\n            style.width = width;\n        if (style.height !== height)\n            style.height = height;\n    };\n    stop = (remove) => {\n        this.stopAutoScroll();\n        if (remove)\n            this.applyElements('remove');\n    };\n    //////////////////////////////////////////////////////////////////////////////////////\n    // AutoScroll\n    startAutoScroll = ({ isDraggingKeyboard, }) => {\n        if (isDraggingKeyboard)\n            return;\n        this.currentEdges = [];\n        this._scrollInterval = setInterval(() => this.handleAutoScroll(), 16);\n    };\n    /** Creates an interval that auto-scrolls while the cursor is near the edge */\n    handleAutoScroll = () => {\n        if (this.DS.continue)\n            return;\n        const { stores: { PointerStore }, Area, } = this.DS;\n        this.currentEdges = getOverflowEdges({\n            elementRect: vect2rect(PointerStore.currentVal),\n            containerRect: this.rect,\n            tolerance: this.Settings.overflowTolerance,\n        });\n        if (this.currentEdges.length)\n            Area.scroll(this.currentEdges, this.Settings.autoScrollSpeed);\n    };\n    stopAutoScroll = () => {\n        this.currentEdges = [];\n        clearInterval(this._scrollInterval);\n    };\n    //////////////////////////////////////////////////////////////////////////////////////\n    // Booleans\n    /**\n     * Checks if the element is either inside the Selector Area (as a reachable child or touching the area)\n     * @param elementRect - slight performance improvements when passed\n     */\n    isInside = (element, elementRect) => {\n        if (this.DS.Area.HTMLNode.contains(element) &&\n            this.DS.stores.ScrollStore.canScroll)\n            return true;\n        return isCollision(this.rect, elementRect || element.getBoundingClientRect());\n    };\n    /** checks if the click was triggered on the area. */\n    isClicked(event) {\n        const { stores: { PointerStore }, } = this.DS;\n        const initialVal = event\n            ? PointerStore.getPointerPosition(event)\n            : PointerStore.initialVal;\n        return isCollision({\n            left: initialVal.x,\n            top: initialVal.y,\n            right: initialVal.x,\n            bottom: initialVal.y,\n        }, this.rect);\n    }\n    get rect() {\n        if (this._rect)\n            return this._rect;\n        return (this._rect = this.HTMLNode.getBoundingClientRect());\n    }\n}\n\nconst wrongTypeWarn = (key, type) => console.warn(`[DragSelect] TypeIssue: setting \"${key}\" is not of type \"${type}\".`);\nconst hydrateHelper = (key, value, withFallback, fallback) => {\n    // no value available\n    if (value === undefined)\n        return withFallback ? { [key]: fallback } : {};\n    // force unsetting of a value\n    if (value === null)\n        return { [key]: null };\n    // TypeCheck [GENERIC]\n    let isAvailable = true; // if it’s not undefined, it was set voluntarily\n    let forceFallback = false;\n    // TypeCheck [String]\n    const expectedString = typeof fallback === 'string';\n    if (expectedString)\n        isAvailable = typeof value === 'string' || value instanceof String;\n    if (expectedString && !isAvailable) {\n        forceFallback = true;\n        wrongTypeWarn(key, 'string');\n    }\n    // TypeCheck [Number]\n    const expectedNumber = !Number.isNaN(fallback) && typeof fallback === 'number';\n    if (expectedNumber)\n        isAvailable = !Number.isNaN(value) && typeof value === 'number';\n    if (expectedNumber && !isAvailable) {\n        forceFallback = true;\n        wrongTypeWarn(key, 'number');\n    }\n    // TypeCheck [Object]\n    const expectedObject = Object.prototype.toString.call(fallback) === '[object Object]';\n    if (expectedObject)\n        isAvailable = Object.prototype.toString.call(value) === '[object Object]';\n    if (expectedObject && !isAvailable) {\n        forceFallback = true;\n        wrongTypeWarn(key, 'object');\n    }\n    // TypeCheck [Boolean]\n    const expectedBoolean = typeof fallback === 'boolean';\n    if (expectedBoolean)\n        isAvailable = typeof value === 'boolean';\n    if (expectedBoolean && !isAvailable) {\n        forceFallback = true;\n        wrongTypeWarn(key, 'boolean');\n    }\n    // TypeCheck [Array]\n    const expectedArray = Array.isArray(fallback);\n    if (expectedArray)\n        isAvailable = Array.isArray(value);\n    if (expectedArray && !isAvailable) {\n        forceFallback = true;\n        wrongTypeWarn(key, 'array');\n    }\n    const isFallback = forceFallback || withFallback;\n    // Special rule for [dragKeys]\n    if (key === 'dragKeys' && isAvailable)\n        return { [key]: Object.assign(fallback, value) };\n    if (key === 'dragKeys' && !isAvailable)\n        return isFallback ? { [key]: fallback } : {};\n    // Special rule for [dropZones]\n    if (key === 'dropZones' &&\n        isAvailable &&\n        Array.isArray(value) &&\n        new Set(value.map((v) => v.id)).size !== value.length)\n        console.warn(`[DragSelect] UniqueConstraintsIssue: setting \"dropZones\" contains duplicate ids.`);\n    if (isAvailable)\n        return { [key]: value };\n    if (isFallback)\n        return { [key]: fallback };\n    return {};\n};\n/**\n * This helper method creates the setting object,\n * - if the settings provided are of wrong type, the fallback value will be used\n * - - except for if settings are undefined or explicitly marked as \"null\"\n * - if \"withfallback\" is true, it will return the object with all settings:\n * - - if not provided from the settings object (or wrong type), the fallback will be used\n * (the fallback value for each setting is the last prop of the hydrateHelper)\n */\nconst hydrateSettings = (settings, withFallback) => ({\n    ...hydrateHelper('area', settings.area, withFallback, document),\n    ...hydrateHelper('selectables', settings.selectables, withFallback, null),\n    ...hydrateHelper('autoScrollSpeed', settings.autoScrollSpeed, withFallback, 5),\n    ...hydrateHelper('overflowTolerance', settings.overflowTolerance, withFallback, { x: 25, y: 25 }),\n    ...hydrateHelper('zoom', settings.zoom, withFallback, 1),\n    ...hydrateHelper('customStyles', settings.customStyles, withFallback, false),\n    ...hydrateHelper('multiSelectMode', settings.multiSelectMode, withFallback, false),\n    ...hydrateHelper('multiSelectToggling', settings.multiSelectToggling, withFallback, true),\n    ...hydrateHelper('multiSelectKeys', settings.multiSelectKeys, withFallback, [\n        'Control',\n        'Shift',\n        'Meta',\n    ]),\n    ...hydrateHelper('selector', settings.selector, withFallback, null),\n    ...hydrateHelper('selectionThreshold', settings.selectionThreshold, withFallback, 0),\n    ...hydrateHelper('draggability', settings.draggability, withFallback, true),\n    ...hydrateHelper('immediateDrag', settings.immediateDrag, withFallback, true),\n    ...hydrateHelper('keyboardDrag', settings.keyboardDrag, withFallback, true),\n    ...hydrateHelper('dragKeys', settings.dragKeys, withFallback, {\n        up: ['ArrowUp'],\n        down: ['ArrowDown'],\n        left: ['ArrowLeft'],\n        right: ['ArrowRight'],\n    }),\n    ...hydrateHelper('keyboardDragSpeed', settings.keyboardDragSpeed, withFallback, 10),\n    ...hydrateHelper('useTransform', settings.useTransform, withFallback, true),\n    ...hydrateHelper('refreshMemoryRate', settings.refreshMemoryRate, withFallback, 80),\n    ...hydrateHelper('dropZones', settings.dropZones, withFallback, []),\n    ...hydrateHelper('dropInsideThreshold', settings.dropInsideThreshold, withFallback, 1),\n    ...hydrateHelper('dropTargetThreshold', settings.dropTargetThreshold, withFallback, 0),\n    ...hydrateHelper('usePointerEvents', settings.usePointerEvents, withFallback, false),\n    ...hydrateHelper('hoverClass', settings.hoverClass, withFallback, 'ds-hover'),\n    ...hydrateHelper('selectableClass', settings.selectableClass, withFallback, 'ds-selectable'),\n    ...hydrateHelper('selectedClass', settings.selectedClass, withFallback, 'ds-selected'),\n    ...hydrateHelper('selectorClass', settings.selectorClass, withFallback, 'ds-selector'),\n    ...hydrateHelper('selectorAreaClass', settings.selectorAreaClass, withFallback, 'ds-selector-area'),\n    ...hydrateHelper('droppedTargetClass', settings.droppedTargetClass, withFallback, 'ds-dropped-target'),\n    ...hydrateHelper('droppedInsideClass', settings.droppedInsideClass, withFallback, 'ds-dropped-inside'),\n    ...hydrateHelper('droppableClass', settings.droppableClass, withFallback, 'ds-droppable'),\n    ...hydrateHelper('dropZoneClass', settings.dropZoneClass, withFallback, 'ds-dropzone'),\n    ...hydrateHelper('dropZoneReadyClass', settings.dropZoneReadyClass, withFallback, 'ds-dropzone-ready'),\n    ...hydrateHelper('dropZoneTargetClass', settings.dropZoneTargetClass, withFallback, 'ds-dropzone-target'),\n    ...hydrateHelper('dropZoneInsideClass', settings.dropZoneInsideClass, withFallback, 'ds-dropzone-inside'),\n});\n\nclass SettingsStore {\n    _settings = {};\n    /**\n     * Holds the settings and their previous value `:pre`\n     * @example {\n     *    autoScrollSpeed: 3,\n     *    'autoScrollSpeed:pre': 5\n     * }\n     **/\n    s = {};\n    PS;\n    /**\n     * @class ScrollStore\n     * @constructor ScrollStore\n     * @param {{ DS:DragSelect, settings:Settings }} p\n     * @ignore\n     */\n    constructor({ PS, settings }) {\n        this.PS = PS;\n        this.update({ settings, init: true });\n    }\n    update = ({ settings, init }) => {\n        this.PS.publish('Settings:updated:pre', {\n            settings: this._settings,\n            'settings:init': Boolean(init),\n            'settings:new': settings\n        });\n        this._update({ settings, init });\n    };\n    _update = ({ settings = {}, init = false }) => {\n        const _settings = hydrateSettings(settings, init);\n        for (const [key, value] of Object.entries(_settings)) {\n            ((key, value) => {\n                if (!(key in this._settings)) {\n                    Object.defineProperty(this.s, key, {\n                        get: () => this._settings[key],\n                        set: (newValue) => this.update({ settings: { [key]: newValue } }),\n                    });\n                }\n                this._settings[`${key}:pre`] = this._settings[key]; // need to cast as K, see https://stackoverflow.com/a/76070928/3712591\n                this._settings[key] = value;\n                const update = {\n                    settings: this._settings,\n                    'settings:init': init,\n                    'settings:new': settings\n                };\n                this.PS.publish('Settings:updated', update);\n                this.PS.publish(`Settings:updated:${key}`, update);\n            })(key, value); // method used for typecasting, see https://stackoverflow.com/q/76036535/3712591\n        }\n    };\n}\n\nconst deprecatedNamesMap = {\n    elementselect: 'DS:select',\n    elementunselect: 'DS:unselect',\n    autoscroll: 'DS:scroll',\n    dragstart: 'DS:start',\n    dragmove: 'DS:update',\n    callback: 'DS:end',\n    preelementselect: 'DS:select:pre',\n    preelementunselect: 'DS:unselect:pre',\n    preautoscroll: 'DS:scroll:pre',\n    predragstart: 'DS:start:pre',\n    predragmove: 'DS:update:pre',\n    precallback: 'DS:end:pre',\n};\nconst endExtraData = (data, DS) => {\n    const target = DS.DropZones.getTarget(data);\n    return {\n        ...data,\n        ...(target ? { dropTarget: target.toObject() } : {}),\n    };\n};\n/** Maps internal events to external ones */\nconst subscriberAliases = ({ PS, DS, }) => {\n    const mapping = {\n        'Selected:added': [\n            { name: 'preelementselect' },\n            { name: 'elementselect' },\n            { name: 'DS:select:pre' },\n            { name: 'DS:select' },\n        ],\n        'Selected:removed': [\n            { name: 'preelementunselect' },\n            { name: 'elementunselect' },\n            { name: 'DS:unselect:pre' },\n            { name: 'DS:unselect' },\n        ],\n        'Selectable:added': [{ name: 'DS:added:pre' }, { name: 'DS:added' }],\n        'Selectable:removed': [{ name: 'DS:removed:pre' }, { name: 'DS:removed' }],\n        'Area:scroll': [\n            { name: 'preautoscroll' },\n            { name: 'autoscroll' },\n            { name: 'DS:scroll:pre' },\n            { name: 'DS:scroll' },\n        ],\n        'Interaction:start': [\n            { name: 'predragstart' },\n            { name: 'dragstart' },\n            { name: 'DS:start:pre' },\n            { name: 'DS:start' },\n        ],\n        'Interaction:update': [\n            { name: 'predragmove', condition: (data) => (data.event ? data : null) },\n            { name: 'dragmove', condition: (data) => (data.event ? data : null) },\n            {\n                name: 'DS:update:pre',\n                condition: (data) => (data.event ? data : null),\n            },\n            { name: 'DS:update', condition: (data) => (data.event ? data : null) },\n        ],\n        'Interaction:end': [\n            { name: 'precallback', extraData: (data, DS) => endExtraData(data, DS) },\n            { name: 'callback', extraData: (data, DS) => endExtraData(data, DS) },\n            { name: 'DS:end:pre', extraData: (data, DS) => endExtraData(data, DS) },\n            { name: 'DS:end', extraData: (data, DS) => endExtraData(data, DS) },\n        ],\n    };\n    for (const [sub_name, sub_pubs] of Object.entries(mapping))\n        addSubscribers({ sub_name, sub_pubs, DS, PS });\n};\nconst addSubscribers = ({ sub_name, DS, PS, sub_pubs, }) => {\n    // Subscribe to the internal event\n    PS.subscribe(sub_name, (data) => \n    // publish to each of the mapped ones\n    sub_pubs.forEach((sub_pub) => publish({ sub_pub, data, DS })));\n};\nconst publish = ({ sub_pub, data, DS, }) => {\n    // If the events condition is met, publish the external event\n    const cleanedData = !sub_pub.condition ? data : sub_pub.condition(data, DS);\n    if (cleanedData) {\n        const extra = (sub_pub.extraData && sub_pub.extraData(data, DS)) || {};\n        DS.publish(sub_pub.name, {\n            // add extra data as needed\n            items: DS.SelectedSet.elements,\n            isDragging: DS.Interaction.isDragging,\n            ...cleanedData,\n            ...extra,\n        });\n    }\n};\n\n/*\n    ____                   _____      __          __\n   / __ \\_________ _____ _/ ___/___  / /__  _____/ /_\n  / / / / ___/ __ `/ __ `/\\__ \\/ _ \\/ / _ \\/ ___/ __/\n / /_/ / /  / /_/ / /_/ /___/ /  __/ /  __/ /__/ /_\n/_____/_/   \\__,_/\\__, //____/\\___/_/\\___/\\___/\\__/\n                 /____/\n\n {*} {*} STAR THIS PROJECT ON GITHUB {*} {*}\n\n https://github.com/ThibaultJanBeyer/DragSelect\n Please give it a like, this is what makes me happy :-)\n Thank You\n\n {*} {*} STAR THIS PROJECT ON GITHUB {*} {*}\n\n ***************************************\n ********* GPLv3 / Commercial **********\n ***************************************\n Created 2017 by ThibaultJanBeyer\n Web: http://www.DragSelect.com/\n GitHub: https://github.com/ThibaultJanBeyer/DragSelect\n ***************************************\n*/\n// Setup\n/// ///////////////////////////////////////////////////////////////////////////////////\nclass DragSelect {\n    /** used to skip all current Selection and dragNdrop functionality */\n    continue = false;\n    PubSub;\n    stores;\n    Area;\n    Selector;\n    SelectorArea;\n    SelectableSet;\n    SelectedSet;\n    Selection;\n    Drag;\n    DropZones;\n    Interaction;\n    stopped;\n    constructor(settings) {\n        this.stopped = false;\n        this.PubSub = new PubSub({ DS: this });\n        this.stores = {};\n        (this.stores.SettingsStore = new SettingsStore({\n            settings,\n            PS: this.PubSub,\n        })),\n            (this.stores.PointerStore = new PointerStore({\n                DS: this,\n                PS: this.PubSub,\n            })),\n            (this.stores.ScrollStore = new ScrollStore({\n                DS: this,\n                PS: this.PubSub,\n            })),\n            (this.stores.KeyStore = new KeyStore({ DS: this, PS: this.PubSub })),\n            (this.Area = new Area({ DS: this, PS: this.PubSub }));\n        this.Selector = new Selector({ DS: this, PS: this.PubSub });\n        this.SelectorArea = new SelectorArea({ DS: this, PS: this.PubSub });\n        this.SelectableSet = new SelectableSet({ DS: this, PS: this.PubSub });\n        this.SelectedSet = new SelectedSet({ DS: this, PS: this.PubSub });\n        this.Selection = new Selection({ DS: this, PS: this.PubSub });\n        this.Drag = new Drag({ DS: this, PS: this.PubSub });\n        this.DropZones = new DropZones({ DS: this, PS: this.PubSub });\n        this.Interaction = new Interaction({ DS: this, PS: this.PubSub });\n        subscriberAliases({ DS: this, PS: this.PubSub });\n        this.PubSub.subscribe('Interaction:end', () => (this.continue = false));\n        this.PubSub.subscribe('DS:end', ({ items }) => (this.continue = false));\n        this.start();\n    }\n    // Useful methods for the user\n    //////////////////////////////////////////////////////////////////////////////////////\n    static isCollision;\n    // any input data from the user is valid in this public PubSub but the exposed values are recommended\n    /** Subscribe to events */\n    subscribe = (eventName, callback) => {\n        // Deprecation warnings\n        if (deprecatedNamesMap[eventName])\n            console.warn(`[DragSelect]: The event name \"${eventName}\" is deprecated and was/will be removed in a future version. Please use the new event name \"${deprecatedNamesMap[eventName]}\" instead.`);\n        this.PubSub.subscribe(eventName, callback);\n    };\n    /** Un-Subscribe from events */\n    unsubscribe = (eventName, callback, id) => this.PubSub.unsubscribe(eventName, callback, id);\n    /** Publish events */\n    publish = (eventName, data) => this.PubSub.publish(eventName, data);\n    /** Initializes the functionality. Automatically triggered when created. Also, reset the functionality after a teardown */\n    start = () => {\n        this.stopped = false;\n        this.Interaction.init();\n    };\n    /**\n     * Complete function teardown\n     * Will teardown/stop the whole functionality\n     * @param remove if elements should be removed.\n     * @param fromSelection if elements should also be added/removed to the selection.\n     * @param withCallback if elements should also be added/removed to the selection.\n     */\n    stop(remove = true, fromSelection = true, withCallback = false) {\n        if (withCallback)\n            this.publish('DS:end', {\n                items: this.SelectedSet.elements,\n                isDragging: this.Interaction.isDragging,\n            });\n        this.Interaction.stop();\n        this.Area.stop();\n        this.Drag.stop();\n        this.Selector.stop();\n        this.SelectorArea.stop(remove);\n        this.stores.KeyStore.stop();\n        this.stores.PointerStore.stop();\n        this.stores.ScrollStore.stop();\n        if (remove)\n            this.SelectableSet.clear();\n        if (fromSelection)\n            this.SelectedSet.clear();\n        this.stopped = true;\n    }\n    /**\n     * Utility to override DragSelect internal functionality:\n     * Break will skip the selection or dragging functionality (until after the callback) but let everything continue to run.\n     * Useful utility to write your own functionality/move/dragNdrop based on DragSelect pointer positions.\n     */\n    break = () => (this.continue = true);\n    /** Update any setting dynamically */\n    setSettings = (settings) => this.stores.SettingsStore.update({ settings });\n    /** Returns the current selected nodes */\n    getSelection = () => this.SelectedSet.elements;\n    /**\n     * Adds several elements to the selection list also adds the specific classes and take into account all calculations.\n     * Does not clear the selection, in contrary to .setSelection. Can add multiple elements at once\n     * @param elements one or multiple elements\n     * @param triggerCallback if callback should be called\n     * @param dontAddToSelectables if element should not be added to the list of selectable elements\n     * @return all selected elements\n     */\n    addSelection(elements, triggerCallback = false, dontAddToSelectables = false) {\n        const els = ensureArray(elements);\n        this.SelectedSet.addAll(els);\n        if (!dontAddToSelectables)\n            this.addSelectables(elements, false, false);\n        if (triggerCallback)\n            this.PubSub.publish('DS:end', {\n                items: this.SelectedSet.elements,\n                isDragging: this.Interaction.isDragging,\n            });\n        return this.getSelection();\n    }\n    /**\n     * Removes specific elements from the selection\n     * Multiple elements can be given at once, in contrary to unselect\n     * @param elements one or multiple elements\n     * @param triggerCallback if callback should be called\n     * @param removeFromSelectables if element should be removed from the list of selectable elements\n     * @return all selected elements\n     */\n    removeSelection(elements, triggerCallback = false, removeFromSelectables = false) {\n        const els = ensureArray(elements);\n        this.SelectedSet.deleteAll(els);\n        if (removeFromSelectables)\n            this.removeSelectables(elements, false, false);\n        if (triggerCallback)\n            this.PubSub.publish('DS:end', {\n                items: this.SelectedSet.elements,\n                isDragging: this.Interaction.isDragging,\n            });\n        return this.getSelection();\n    }\n    /**\n     * Toggles specific elements from the selection:\n     * If element is not in selection it will be added, if it is already selected, it will be removed.\n     * Multiple elements can be given at once.\n     * @param elements one or multiple elements\n     * @param triggerCallback if callback should be called\n     * @param removeFromSelectables if element should not be added/removed to the list of selectable elements accordingly\n     * @return all selected elements\n     */\n    toggleSelection(elements, triggerCallback = false, removeFromSelectables = false) {\n        const els = ensureArray(elements);\n        els.forEach((el) => this.SelectedSet.has(el)\n            ? this.removeSelection(elements, triggerCallback, removeFromSelectables)\n            : this.addSelection(elements, triggerCallback, removeFromSelectables));\n        if (triggerCallback)\n            this.PubSub.publish('DS:end', {\n                items: this.SelectedSet.elements,\n                isDragging: this.Interaction.isDragging,\n            });\n        return this.getSelection();\n    }\n    /**\n     * Sets the current selected elements and optionally run the callback\n     * By default, adds new elements also to the list of selectables\n     * @param elements dom elements\n     * @param triggerCallback if callback should be called\n     * @param dontAddToSelectables if element should not be added to the list of selectable elements\n     */\n    setSelection(elements, triggerCallback = false, dontAddToSelectables = false) {\n        this.clearSelection();\n        this.addSelection(elements, triggerCallback, dontAddToSelectables);\n        return this.getSelection();\n    }\n    /**\n     * Unselect / Deselect all current selected Nodes\n     * @param triggerCallback if callback should be called\n     * @return this.selected, should be empty\n     */\n    clearSelection(triggerCallback = false) {\n        this.SelectedSet.clear();\n        if (triggerCallback)\n            this.PubSub.publish('DS:end', {\n                items: this.SelectedSet.elements,\n                isDragging: this.Interaction.isDragging,\n            });\n        return this.getSelection();\n    }\n    /**\n     * Add elements that can be selected. No node is added twice\n     * @param elements dom element(s)\n     * @param addToSelection if elements should also be added to current selection\n     * @param triggerCallback if callback should be called\n     * @return the added element(s)\n     */\n    addSelectables(elements, addToSelection, triggerCallback) {\n        const els = ensureArray(elements);\n        this.SelectableSet.addAll(els);\n        if (addToSelection)\n            this.SelectedSet.addAll(els);\n        if (triggerCallback)\n            this.PubSub.publish('DS:end', {\n                items: this.SelectedSet.elements,\n                isDragging: this.Interaction.isDragging,\n            });\n        return els;\n    }\n    /** Gets all nodes that can potentially be selected */\n    getSelectables = () => this.SelectableSet.elements;\n    /**\n     * Remove elements from the elements that can be selected.\n     * @param elements dom element(s)\n     * @param removeFromSelection if elements should also be removed from current selection\n     * @param triggerCallback if callback should be called\n     * @return the removed element(s)\n     */\n    removeSelectables(elements, removeFromSelection, triggerCallback) {\n        const els = ensureArray(elements);\n        this.SelectableSet.deleteAll(els);\n        if (removeFromSelection)\n            this.removeSelection(elements);\n        if (triggerCallback)\n            this.PubSub.publish('DS:end', {\n                items: this.SelectedSet.elements,\n                isDragging: this.Interaction.isDragging,\n            });\n        return els;\n    }\n    /** The starting/initial position of the cursor/selector */\n    getInitialCursorPosition = () => this.stores.PointerStore.initialVal;\n    /** The last seen position of the cursor/selector */\n    getCurrentCursorPosition = () => this.stores.PointerStore.currentVal;\n    /** The previous position of the cursor/selector */\n    getPreviousCursorPosition = () => this.stores.PointerStore.lastVal;\n    /** The starting/initial position of the cursor/selector */\n    getInitialCursorPositionArea = () => this.stores.PointerStore.initialValArea;\n    /** The last seen position of the cursor/selector */\n    getCurrentCursorPositionArea = () => this.stores.PointerStore.currentValArea;\n    /** The previous position of the cursor/selector */\n    getPreviousCursorPositionArea = () => this.stores.PointerStore.lastValArea;\n    /** Whether the multi-selection key was pressed */\n    isMultiSelect = (event) => this.stores.KeyStore.isMultiSelectKeyPressed(event);\n    /** Whether the user is currently drag n dropping elements (instead of selection) */\n    isDragging = () => this.Interaction.isDragging;\n    /** Returns first DropsZone under coordinates, if no coordinated provided current pointer coordinates are used */\n    getZoneByCoordinates = (coordinates) => this.DropZones.getTarget({ coordinates })?.toObject();\n    /** Returns itemsDropped into zone by zone id */\n    getItemsDroppedByZoneId = (zoneId) => this.DropZones.getItemsDroppedById(zoneId);\n    /**\n     * Returns itemsInside by zone id\n     * @param addClasses whether or not to add/remove the \"inside\" classes to the items\n     */\n    getItemsInsideByZoneId = (zoneId, addClasses) => this.DropZones.getItemsInsideById(zoneId, addClasses);\n}\nDragSelect.isCollision = isCollision;\n\nexport { DragSelect as default };\n","export default __webpack_public_path__ + \"assets/pdf/SARPDOVENRESUME.pdf\";","class Experience {\n  constructor() {\n    this.companyLogos = document.querySelectorAll(\".company-logo\");\n    this.timelines = document.querySelectorAll(\".timeline\");\n  }\n\n  activateEvents() {\n    this.companyLogos.forEach((company) => {\n      if (!company.id) {\n        return;\n      }\n      company.addEventListener(\"click\", () =>\n        this.handleClickOnCompany(company)\n      );\n    });\n  }\n  deactivateEvents() {\n    this.companyLogos.forEach((company) => {\n      if (!company.id) {\n        return;\n      }\n      company.removeEventListener(\"click\", () =>\n        this.handleClickOnCompany(company)\n      );\n    });\n  }\n  handleClickOnCompany = (company) => {\n    const timelineString = company.id.replace(\"_company_logo\", \"_timeline\");\n    company.classList.add(\"company-logo-selected\");\n    this.companyLogos.forEach((companyLogo) => {\n      if (companyLogo != company) {\n        companyLogo.classList.remove(\"company-logo-selected\");\n      }\n    });\n    const currentTimeline = document.getElementById(timelineString);\n    currentTimeline.style.display = \"block\";\n    this.timelines.forEach((timeline) => {\n      if (timeline != currentTimeline) {\n        timeline.style.display = \"none\";\n      }\n    });\n  };\n}\nexport default Experience;\n","class AboutMe {\n  constructor() {\n    this.offset = -468;\n    this.likeListeners = [];\n    this.likedListeners = [];\n    this.nextListeners = [];\n    this.prevListeners = [];\n  }\n  activateEvents() {\n    this.handleSelectImages(1, 2);\n    this.handleSelectImages(2, 3);\n    this.handleSelectImages(3, 0);\n    this.handleSelectImages(4, 1);\n    this.handleSelectImages(5, 2);\n    this.handleSelectImages(6, 1);\n    this.handleSelectImages(7, 2);\n  }\n  handleSelectImages(numPost, maxImages) {\n    const like = document.getElementById(\"like_\" + numPost);\n    const liked = document.getElementById(\"liked_\" + numPost);\n    const post = document.getElementById(\"post_\" + numPost);\n    const next = document.getElementById(\"next_\" + numPost);\n    const prev = document.getElementById(\"prev_\" + numPost);\n    const likeListener = () => this.handleLikeEventListener(like, liked);\n    const likedListener = () => this.handleLikedEventListener(like, liked);\n    const nextListener = () =>\n      this.handleNextEventListener(post, currentImage, prev, next, maxImages);\n    const prevListener = () =>\n      this.handlePrevEventListener(post, currentImage, prev, next);\n\n    like.addEventListener(\"click\", likeListener);\n    liked.addEventListener(\"click\", likedListener);\n\n    if (numPost == 3) {\n      const next = document.getElementById(\"next_\" + numPost);\n      next.style.visibility = \"hidden\";\n      return;\n    }\n    const currentImage = { numPost: 0 };\n    next.addEventListener(\"click\", nextListener);\n    prev.addEventListener(\"click\", prevListener);\n\n    this.likeListeners.push({ element: like, listener: likeListener });\n    this.likedListeners.push({ element: liked, listener: likedListener });\n    this.nextListeners.push({ element: next, listener: nextListener });\n    this.prevListeners.push({ element: prev, listener: prevListener });\n  }\n  handlePrevEventListener = (post, currentImage, prev, next) => {\n    post.style.objectPosition =\n      this.offset - this.offset * (2 - currentImage.numPost) + \"px\";\n    currentImage.numPost--;\n    next.style.visibility = \"visible\";\n    if (currentImage.numPost == 0) {\n      prev.style.visibility = \"hidden\";\n    }\n  };\n  handleNextEventListener = (post, currentImage, prev, next, maxImages) => {\n    post.style.objectPosition =\n      this.offset + this.offset * currentImage.numPost + \"px\";\n    currentImage.numPost++;\n    prev.style.visibility = \"visible\";\n    if (currentImage.numPost == maxImages) {\n      next.style.visibility = \"hidden\";\n    }\n  };\n  handleLikeEventListener = (like, liked) => {\n    liked.style.display = \"inline-block\";\n    like.style.display = \"none\";\n  };\n  handleLikedEventListener = (like, liked) => {\n    like.style.display = \"inline-block\";\n    liked.style.display = \"none\";\n  };\n\n  deactivateEvents() {\n    this.likeListeners.forEach(({ element, listener }) => {\n      element.removeEventListener(\"click\", listener);\n    });\n    this.likedListeners.forEach(({ element, listener }) => {\n      element.removeEventListener(\"click\", listener);\n    });\n    this.nextListeners.forEach(({ element, listener }) => {\n      element.removeEventListener(\"click\", listener);\n    });\n    this.prevListeners.forEach(({ element, listener }) => {\n      element.removeEventListener(\"click\", listener);\n    });\n\n    this.likeListeners = [];\n    this.likedListeners = [];\n    this.nextListeners = [];\n    this.prevListeners = [];\n  }\n}\nexport default AboutMe;\n","class Credits {\n  constructor() {\n    this.creditsSection = document.getElementById(\"credits_credits\");\n    this.prevButton = document.getElementById(\"prev_button\");\n    this.nextButton = document.getElementById(\"next_button\");\n    this.inspirationSection = document.getElementById(\"credits_inspiration\");\n    this.resourcesSection = document.getElementById(\"credits_resources\");\n    this.specialThanksSection = document.getElementById(\n      \"credits_special_thanks\"\n    );\n    this.allButtonsCredits = document.querySelectorAll(\".credits-section\");\n    this.arrayOrder = [\n      \"credits_button\",\n      \"inspiration_button\",\n      \"resources_button\",\n      \"special_thanks_button\",\n    ];\n    this.buttonListeners = [];\n    this.currentIndex = 0;\n  }\n  onCreditsClickButton = (id) => {\n    switch (id) {\n      case \"credits_button\":\n        this.creditsSection.style.display = \"block\";\n        this.inspirationSection.style.display = \"none\";\n        this.resourcesSection.style.display = \"none\";\n        this.specialThanksSection.style.display = \"none\";\n        this.currentIndex = 0;\n        break;\n      case \"inspiration_button\":\n        this.creditsSection.style.display = \"none\";\n        this.inspirationSection.style.display = \"block\";\n        this.resourcesSection.style.display = \"none\";\n        this.specialThanksSection.style.display = \"none\";\n        this.currentIndex = 1;\n        break;\n      case \"resources_button\":\n        this.creditsSection.style.display = \"none\";\n        this.inspirationSection.style.display = \"none\";\n        this.resourcesSection.style.display = \"block\";\n        this.specialThanksSection.style.display = \"none\";\n        this.currentIndex = 2;\n        break;\n      case \"special_thanks_button\":\n        this.creditsSection.style.display = \"none\";\n        this.inspirationSection.style.display = \"none\";\n        this.resourcesSection.style.display = \"none\";\n        this.specialThanksSection.style.display = \"block\";\n        this.currentIndex = 3;\n        break;\n    }\n    this.checkIfOutOfArray();\n  };\n  checkIfOutOfArray = () => {\n    if (this.currentIndex == 3) {\n      this.nextButton.style.display = \"none\";\n      this.prevButton.style.display = \"block\";\n    } else if (this.currentIndex == 0) {\n      this.nextButton.style.display = \"block\";\n      this.prevButton.style.display = \"none\";\n    } else {\n      this.nextButton.style.display = \"block\";\n      this.prevButton.style.display = \"block\";\n    }\n  };\n\n  activateEvents() {\n    this.allButtonsCredits.forEach((button) => {\n      const listener = () => this.onCreditsClickButton(button.id);\n      button.addEventListener(\"click\", listener);\n      this.buttonListeners.push({ element: button, listener });\n    });\n\n    this.prevButtonListener = () => {\n      if (this.currentIndex >= 1) {\n        this.onCreditsClickButton(this.arrayOrder[this.currentIndex - 1]);\n      }\n    };\n\n    this.nextButtonListener = () => {\n      if (this.currentIndex <= 2) {\n        this.onCreditsClickButton(this.arrayOrder[this.currentIndex + 1]);\n      }\n    };\n\n    this.prevButton.addEventListener(\"click\", this.prevButtonListener);\n    this.nextButton.addEventListener(\"click\", this.nextButtonListener);\n  }\n\n  deactivateEvents() {\n    this.buttonListeners.forEach(({ element, listener }) => {\n      element.removeEventListener(\"click\", listener);\n    });\n    this.prevButton.removeEventListener(\"click\", this.prevButtonListener);\n    this.nextButton.removeEventListener(\"click\", this.nextButtonListener);\n  }\n}\nexport default Credits;\n","export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.3.3',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","import * as emailjs from \"@emailjs/browser\";\nclass Contact {\n  constructor() {\n    this.formContact = document.getElementById(\"form-contact\");\n\n    this.msg_success = document.getElementById(\"message_contact_success\");\n    this.msg_error = document.getElementById(\"message_contact_error\");\n  }\n\n  submitEventListener = (event) => {\n    event.preventDefault();\n    const name = document.getElementById(\"form-name\").value;\n    const mail = document.getElementById(\"form-mail\").value;\n    const msg = document.getElementById(\"form-message\").value;\n    emailjs.init({\n      publicKey: \"N5dc30IL19RoqJaN6\",\n    });\n    emailjs\n      .send(\"Sarp's Portfolio\", \"template_f0h9q7f\", {\n        from_name: name,\n        email_id: mail,\n        message: msg,\n      })\n      .then(\n        (response) => {\n          console.log(\"Mail sent successfully!\", response);\n          this.msg_success.style.display = \"block\";\n        },\n        (error) => {\n          console.error(\"Error while sending mail:\", error);\n          this.msg_error.style.display = \"block\";\n        }\n      );\n    this.formContact.reset();\n  };\n  activateEvents() {\n    this.formContact.addEventListener(\"submit\", this.submitEventListener);\n  }\n\n  deactivateEvents() {\n    this.formContact.removeEventListener(\"submit\", this.submitEventListener);\n  }\n}\nexport default Contact;\n","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n","import DragSelect from \"dragselect\";\nimport Resume from \"../static/resume/SARPDOVENRESUME.pdf\";\nimport Experience from \"./experience\";\nimport AboutMe from \"./about-me\";\nimport Credits from \"./credits\";\nimport Contact from \"./contact\";\n\nconst experience = new Experience();\nconst aboutMe = new AboutMe();\nconst credits = new Credits();\nconst contact = new Contact();\n\nexperience.activateEvents();\naboutMe.activateEvents();\ncredits.activateEvents();\ncontact.activateEvents();\n\nclass Desktop {\n  constructor() {\n    this.maxZIndex = 10;\n    this.windowWidth = window.innerWidth;\n    this.windowHeight = window.innerHeight;\n    this.ds = new DragSelect({\n      selectables: document.querySelectorAll(\".apps\"),\n      callback: (e) => console.log(e),\n    });\n    this.windowsMenu = document.querySelector(\".open-windows-menu\");\n    this.footer = document.getElementById(\"footer\");\n    this.windowsIcon = document.getElementById(\"windows-icon-section\");\n    this.windowsMenu = document.querySelector(\".open-windows-menu\");\n    this.titleBar = document.querySelectorAll(\".title-bar\");\n    this.bottomApps = document.querySelectorAll(\".taskbar-app\");\n    this.currentDate = document.getElementById(\"current-date\");\n    this.hoursMinutes = document.getElementById(\"hours-minutes\");\n    this.apps = document.querySelectorAll(\".apps\");\n    this.minimizeButtons = document.querySelectorAll(\".minimize\");\n    this.bottomApps = document.querySelectorAll(\".taskbar-app\");\n    this.closeButtons = document.querySelectorAll(\".close\");\n    this.restoreButtons = document.querySelectorAll(\".restore\");\n  }\n\n  activateEvents() {\n    const experience = new Experience();\n    const aboutMe = new AboutMe();\n    const credits = new Credits();\n    const contact = new Contact();\n\n    experience.activateEvents();\n    aboutMe.activateEvents();\n    credits.activateEvents();\n    contact.activateEvents();\n\n    this.activateFooterEvent();\n    this.activateOutsideWindowsIconEvent();\n    this.activateWindowsIconEvent();\n    this.activateTitleBarEvents();\n    this.activateDateTimeUpdates();\n    this.activateAppEvents();\n\n    this.activateBottomAppEvents();\n    this.activateMinimizeButtons();\n    this.activateCloseButtons();\n    this.activateRestoreButtons();\n    this.activateMouseUpEvent();\n\n    setInterval(this.activateDateTimeUpdates, 1000);\n    this.activateDateTimeUpdates();\n  }\n  activateMouseUpEvent = () => {\n    document.addEventListener(\"mouseup\", () => {\n      window.parent.postMessage(\"mouseup\", \"*\");\n      if (this.ds.stopped) {\n        this.ds.start();\n      }\n    });\n    document.addEventListener(\"mousedown\", () => {\n      window.parent.postMessage(\"mousedown\", \"*\");\n    });\n  };\n\n  activateFooterEvent = () => {\n    this.footer.addEventListener(\"mousedown\", () => {\n      if (!this.ds.stopped) {\n        this.ds.stop();\n      }\n    });\n  };\n\n  activateWindowsIconEvent = () => {\n    this.windowsIcon.addEventListener(\"click\", () => {\n      this.openMenu();\n    });\n  };\n\n  openMenu = () => {\n    if (this.windowsMenu.getAttribute(\"style\") == null) {\n      this.windowsMenu.setAttribute(\n        \"style\",\n        \"display: flex; transition: all 0.2s ease-in\"\n      );\n    } else {\n      this.windowsMenu.removeAttribute(\"style\");\n    }\n  };\n\n  activateOutsideWindowsIconEvent = () => {\n    document.addEventListener(\"mousedown\", (event) => {\n      if (!event.target.closest(\".open-windows-menu\")) {\n        this.windowsMenu.removeAttribute(\"style\");\n      }\n    });\n  };\n\n  startDrag = (event) => {\n    if (!this.ds?.stopped) {\n      this.ds.stop();\n    }\n    this.element = event.srcElement.parentElement;\n    this.incrementMaxZIndex(this.element);\n    this.initialMouseX = event.clientX;\n    this.initialMouseY = event.clientY;\n    this.initialWindowX = parseFloat(\n      window.getComputedStyle(this.element).left\n    );\n    this.initialWindowY = parseFloat(window.getComputedStyle(this.element).top);\n\n    document.addEventListener(\"mousemove\", this.drag);\n    document.addEventListener(\"mouseup\", this.stopDrag);\n  };\n\n  incrementMaxZIndex = (element) => {\n    if (!element.id) {\n      return;\n    }\n    this.bottomApps.forEach((bottomApp) => {\n      if (bottomApp.classList.contains(\"taskbar-selected\")) {\n        bottomApp.classList.remove(\"taskbar-selected\");\n      }\n    });\n    const currentBottomApp = document.getElementById(element.id + \"_bottom\");\n    currentBottomApp.classList.add(\"taskbar-selected\");\n    element.style.zIndex = this.maxZIndex + 1;\n    ++this.maxZIndex;\n  };\n\n  drag = (event) => {\n    if (this.element.style.width == \"100vw\") {\n      return;\n    }\n    let mouseY = event.clientY;\n    if (event.clientY < 0) {\n      mouseY = 0;\n    } else if (event.clientY > window.innerHeight - 50) {\n      mouseY = window.innerHeight - 50;\n    }\n    let mouseX = event.clientX;\n    if (event.clientX < 0) {\n      mouseX = 0;\n    } else if (event.clientX > window.innerWidth) {\n      mouseX = window.innerWidth;\n    }\n    const deltaX = mouseX - this.initialMouseX;\n    const deltaY = mouseY - this.initialMouseY;\n    this.element.style.left = this.initialWindowX + deltaX + \"px\";\n    this.element.style.top = this.initialWindowY + deltaY + \"px\";\n  };\n  stopDrag = () => {\n    if (this.ds.stopped) {\n      this.ds.start();\n    }\n    document.removeEventListener(\"mousemove\", this.drag);\n    document.removeEventListener(\"mouseup\", this.stopDrag);\n  };\n\n  activateTitleBarEvents = () => {\n    this.titleBar.forEach((title_bar) => {\n      title_bar.addEventListener(\"mousedown\", this.startDrag);\n      title_bar.addEventListener(\"dblclick\", () => {\n        const minimizeButton = title_bar.querySelector(\".minimize\");\n        this.resizeWindow(title_bar.parentElement, minimizeButton);\n      });\n    });\n  };\n\n  getCurrentDateTime = () => {\n    const now = new Date();\n    const options = {\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\",\n    };\n    const formattedDate = now.toLocaleDateString(undefined, options);\n    const hours = now.getHours().toString().padStart(2, \"0\");\n    const minutes = now.getMinutes().toString().padStart(2, \"0\");\n    return { formattedDate, hours, minutes };\n  };\n\n  activateDateTimeUpdates = () => {\n    const { formattedDate, hours, minutes } = this.getCurrentDateTime();\n    this.currentDate.textContent = formattedDate;\n    this.hoursMinutes.textContent = `${hours}:${minutes}`;\n  };\n\n  activateAppEvents = () => {\n    this.apps.forEach((app) => {\n      app.addEventListener(\"dblclick\", () => this.openApp(app));\n    });\n  };\n  deactivateEvents() {}\n\n  openApp = (app) => {\n    const appName = app.id.replace(\"_app\", \"\");\n    if (appName == \"resume\") {\n      window.open(Resume);\n    } else if (appName == \"project\") {\n      window.parent.postMessage(\"Projects\", \"*\");\n    } else {\n      this.openWindow(appName);\n    }\n  };\n\n  activateBottomAppEvents = () => {\n    this.bottomApps.forEach((bottomApp) => {\n      bottomApp.addEventListener(\"click\", () => {\n        const appName = bottomApp.id.replace(\"_bottom\", \"\");\n        this.openWindow(appName);\n      });\n    });\n  };\n\n  openWindow = (appName) => {\n    const currentWindow = document.getElementById(appName);\n    currentWindow.style.display = \"block\";\n    const bottomApp = document.getElementById(appName + \"_bottom\");\n    bottomApp.classList.add(\"taskbar-opened\");\n    this.incrementMaxZIndex(currentWindow);\n    currentWindow.addEventListener(\"mousedown\", (event) => {\n      if (!this.ds.stopped) {\n        this.ds.stop();\n      }\n      if (\n        !event.srcElement.classList.contains(\"close\") &&\n        !event.srcElement.classList.contains(\"restore\")\n      ) {\n        this.incrementMaxZIndex(currentWindow);\n      }\n    });\n  };\n  activateMinimizeButtons = () => {\n    this.minimizeButtons.forEach((minimizeButton) => {\n      minimizeButton.addEventListener(\"click\", () => {\n        const currentWindow =\n          minimizeButton.parentElement.parentElement.parentElement;\n        this.resizeWindow(currentWindow, minimizeButton);\n      });\n    });\n  };\n  activateCloseButtons = () => {\n    this.closeButtons.forEach((closeButton) => {\n      closeButton.addEventListener(\"click\", () => {\n        const currentWindow =\n          closeButton.parentElement.parentElement.parentElement;\n\n        const timelines = currentWindow.querySelectorAll(\".timeline\");\n        const companyLogos = currentWindow.querySelectorAll(\".company-logo\");\n        currentWindow.removeAttribute(\"style\");\n        const content =\n          currentWindow.id == \"contact\"\n            ? currentWindow.querySelector(\".content-light\")\n            : currentWindow.querySelector(\".content\");\n        if (currentWindow.id == \"experience\") {\n          timelines.forEach((timeline) => {\n            timeline.style.display = \"none\";\n          });\n\n          companyLogos.forEach((companyLogo) => {\n            if (companyLogo.classList.contains(\"company-logo-selected\")) {\n              companyLogo.classList.remove(\"company-logo-selected\");\n            }\n          });\n        }\n        content.scrollTo(0, 0);\n        currentWindow.style.display = \"none\";\n        const bottomApp = document.getElementById(currentWindow.id + \"_bottom\");\n        if (bottomApp.classList.contains(\"taskbar-opened\")) {\n          bottomApp.classList.remove(\"taskbar-opened\");\n        }\n        if (bottomApp.classList.contains(\"taskbar-selected\")) {\n          bottomApp.classList.remove(\"taskbar-selected\");\n        }\n      });\n    });\n  };\n  activateRestoreButtons = () => {\n    this.restoreButtons.forEach((restore) => {\n      restore.addEventListener(\"click\", () => {\n        const currentWindow = restore.parentElement.parentElement.parentElement;\n        currentWindow.style.display = \"none\";\n        const bottomApp = document.getElementById(currentWindow.id + \"_bottom\");\n        if (bottomApp.classList.contains(\"taskbar-selected\")) {\n          bottomApp.classList.remove(\"taskbar-selected\");\n        }\n      });\n    });\n  };\n\n  resizeWindow = (window, minimizeButton) => {\n    this.incrementMaxZIndex(window);\n    if (window.style.width !== \"100vw\") {\n      minimizeButton.classList.add(\"minimize-full\");\n      this.maximizeWindow(window);\n    } else {\n      if (minimizeButton.classList.contains(\"minimize-full\")) {\n        minimizeButton.classList.remove(\"minimize-full\");\n      }\n      this.minimizeWindow(window);\n    }\n  };\n\n  maximizeWindow = (currentWindow) => {\n    const currentWindowID = currentWindow.id;\n    let offset = 105;\n    if (currentWindowID == \"experience\") {\n      offset = 95;\n    } else if (currentWindowID == \"about-me\") {\n      offset = 175;\n    }\n    currentWindow.style.width = \"100vw\";\n    currentWindow.style.height = \"calc(100vh - \" + offset + \"px)\";\n    currentWindow.style.top = \"calc(calc(100vh - \" + offset + \"px)/2)\";\n    currentWindow.style.left = \"calc(100vw /2)\";\n  };\n\n  minimizeWindow = (currentWindow) => {\n    const currentWindowID = currentWindow.id;\n    let offset = 80;\n    if (currentWindowID == \"credits\" || currentWindowID == \"about-me\") {\n      offset = 60;\n    }\n    currentWindow.style.width = offset + \"vw\";\n    currentWindow.style.height = offset + \"vh\";\n  };\n}\nexport default Desktop;\n","import \"./style.css\";\nimport Desktop from \"./desktop\";\n\nconst desktop = new Desktop();\ndesktop.activateEvents();\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","addModificationObservers","nodes","cb","callback","addEventListener","observer","MutationObserver","resizeObserver","ResizeObserver","forEach","el","observe","childList","attributes","Element","cleanup","removeEventListener","disconnect","debounce","func","wait","timeout","args","clearTimeout","setTimeout","undefined","getAllParentNodes","node","traverse","toWatch","index","parent","parentNode","push","handleElementPositionAttribute","computedStyle","position","Document","style","Area","DS","PS","Settings","_observers","_node","_parentNodes","_computedStyle","_computedBorder","_rect","constructor","stores","SettingsStore","s","area","setArea","subscribe","settings","init","reset","publish","item","HTMLNode","parentNodes","event","stop","scroll","directions","multiplier","data","scroll_directions","scroll_multiplier","element","docEl","documentElement","scrollTop","_element","body","includes","scrollBot","scrollHeight","scrollLeft","scrollRight","scrollWidth","scrollElement","computedBorder","top","parseInt","borderTopWidth","bottom","borderBottomWidth","left","borderLeftWidth","right","borderRightWidth","getComputedStyle","rect","zoom","width","innerWidth","height","innerHeight","getBoundingClientRect","clientWidth","clientHeight","getAreaRect","calcVect","x","x1","y","y1","operator","x2","y2","rect2vect","vect2rect","vect","dimension","num2vect","n","getComputedTranslatePositions","computed","transform","indexOf","match","trim","values","split","limitDirection","containerRect","selectionRect","direction","scrollAmount","delta","Math","max","min","Drag","_prevCursorPos","_prevScrollPos","_elements","_dragKeys","_dragKeysFlat","_selectionRect","assignDragKeys","start","update","keyboardDrag","keyboardEnd","up","dragKeys","map","k","toLowerCase","down","key","_key","SelectedSet","size","draggability","continue","publishData","isDragging","isDraggingKeyboard","getSelection","Selection","boundingRect","handleZIndex","posDirection","shiftKey","keyboardDragSpeed","scrollDiff","increase","handleKeyboardDragPosDifference","KeyStore","currentValues","_scrollDiff","SelectorArea","ScrollStore","moveElements","_cursorDiff","add","zIndex","elements","filterDragElements","useTransform","elementPos","useTranslate","getTranslatedPositions","getTopLeftPosition","getStylePosition","prevTransform","setStylePosition","moveElement","currentPointerVal","PointerStore","currentVal","cursorDiff","currentScrollVal","isCollision","el1","el2","percent","element1","widthPoint","heightPoint","ensureArray","input","Array","isArray","Symbol","iterator","Set","DropZone","id","_droppables","_timeout","_itemsDropped","_itemsInside","isDestroyed","droppables","classList","dropZoneClass","remove","refreshMemoryRate","setReadyClasses","action","selectedEls","filter","has","droppableClass","dropZoneReadyClass","handleNoDrop","droppedTargetClass","dropZoneTargetClass","handleDrop","handleItemsInsideClasses","isAnyInside","itemsInside","droppedInsideClass","className","dropZoneInsideClass","destroy","unsubscribe","toObject","itemsDropped","flatMap","itemRect","SelectableSet","rects","get","dropInsideThreshold","value","DropZones","_zoneByElement","Map","_zoneById","_zonesByDroppable","_zones","setDropZones","dropZones","zone","set","droppable","zones","_handleDrops","target","_getZoneByElementsFromPoint","il","dropTargetThreshold","getTarget","getItemsDroppedById","zoneId","console","warn","getItemsInsideById","addClasses","getKeyboardItemCenter","coordinates","keyboardCoordinates","elementsFromPoint","Interaction","isInteracting","removeAreaEventListeners","setAreaEventListeners","onClick","_start","_init","_reset","_canInteract","isKeyboardClick","clientX","clientY","detail","button","isInside","isClicked","type","preventDefault","isDragEvent","setDocEventListeners","clickedElement","closest","selectableClass","isMultiSelectKeyPressed","immediateDrag","clear","toggle","removeDocEventListeners","usePointerEvents","passive","_currentValues","_keyMapping","control","shift","meta","keydown","keyup","toLocaleLowerCase","delete","multiSelectMode","multiSelectKeys","some","from","_isMouseInteraction","_initialValArea","_currentValArea","_lastValArea","_initialVal","_currentVal","_lastVal","_lastTouch","initialVal","getPointerPosition","getPointerPos","_normalizedEvent","lastVal","KeyboardEvent","touches","initialValArea","currentValArea","lastValArea","PubSub","subscribers","eventName","findIndex","splice","Number","name","_publish","_handlePrePublish","_handlePublish","stopped","getDocumentScroll","getCurrentScroll","_canScroll","currentScrollTop","canScroll","Boolean","addListeners","removeListeners","zoomScroll","_rects","super","selectables","items","_onClick","_onPointer","hoverClass","addAll","deleteAll","getElementRect","selectedClass","deleted","updateElementStylePos","pos","Selector","selector","selectorClass","attachSelector","removeChild","customStyles","createElement","background","border","display","pointerEvents","createSelectorElement","appendChild","pPos","initialPointerPos","pointerPos","selectorPos","getSelectorPosition","_prevSelectedSet","_boundingRect","_storePrevious","_handleInsideSelection","force","multiSelectionToggle","multiSelectToggling","selectionThreshold","elRects","selectorRect","select","unselect","elementRect","filteredSelect","filteredUnselect","filterSelected","_","hoverClassName","contains","handleSelection","PrevSelectedSet","inSelection","inPrevSelection","handleUnSelection","POSITIVE_INFINITY","NEGATIVE_INFINITY","getSelectionRect","_scrollInterval","currentEdges","overflow","createSelectorAreaElement","selectorAreaClass","updatePos","startAutoScroll","stopAutoScroll","applyElements","method","methodName","setInterval","handleAutoScroll","tolerance","edges","getOverflowEdges","overflowTolerance","autoScrollSpeed","clearInterval","wrongTypeWarn","hydrateHelper","withFallback","fallback","isAvailable","forceFallback","expectedString","String","expectedNumber","isNaN","expectedObject","Object","prototype","toString","call","expectedBoolean","expectedArray","isFallback","assign","v","_settings","_update","hydrateSettings","entries","defineProperty","newValue","deprecatedNamesMap","elementselect","elementunselect","autoscroll","dragstart","dragmove","preelementselect","preelementunselect","preautoscroll","predragstart","predragmove","precallback","endExtraData","dropTarget","addSubscribers","sub_name","sub_pubs","sub_pub","cleanedData","condition","extra","extraData","DragSelect","mapping","subscriberAliases","static","fromSelection","withCallback","break","setSettings","addSelection","triggerCallback","dontAddToSelectables","els","addSelectables","removeSelection","removeFromSelectables","removeSelectables","toggleSelection","setSelection","clearSelection","addToSelection","getSelectables","removeFromSelection","getInitialCursorPosition","getCurrentCursorPosition","getPreviousCursorPosition","getInitialCursorPositionArea","getCurrentCursorPositionArea","getPreviousCursorPositionArea","isMultiSelect","getZoneByCoordinates","getItemsDroppedByZoneId","getItemsInsideByZoneId","companyLogos","querySelectorAll","timelines","activateEvents","company","handleClickOnCompany","deactivateEvents","timelineString","companyLogo","currentTimeline","getElementById","timeline","offset","likeListeners","likedListeners","nextListeners","prevListeners","handleSelectImages","numPost","maxImages","like","liked","post","next","prev","likeListener","handleLikeEventListener","likedListener","handleLikedEventListener","nextListener","handleNextEventListener","currentImage","prevListener","handlePrevEventListener","visibility","listener","objectPosition","creditsSection","prevButton","nextButton","inspirationSection","resourcesSection","specialThanksSection","allButtonsCredits","arrayOrder","buttonListeners","currentIndex","onCreditsClickButton","checkIfOutOfArray","prevButtonListener","nextButtonListener","EmailJSResponseStatus","_status","_text","status","text","store","origin","blockHeadless","storageProvider","localStorage","Promise","resolve","getItem","setItem","removeItem","createWebStorage","buildOptions","options","publicKey","send","async","serviceID","templateID","templateParams","opts","blockList","limitRate","navigator","webdriver","languages","isHeadless","reject","validateParams","validateTemplateParams","params","list","watchVariable","isBlockListDisabled","validateBlockListParams","FormData","isBlockedValueInParams","defaultID","storage","throttle","validateLimitRateParams","leftTime","lastTime","Date","now","getLeftTime","isLimitRateHit","pathname","lib_version","user_id","service_id","template_id","template_params","url","headers","response","fetch","message","responseStatus","ok","sendPost","JSON","stringify","formContact","msg_success","msg_error","submitEventListener","mail","msg","emailjs","from_name","email_id","then","log","error","experience","Experience","aboutMe","AboutMe","credits","Credits","contact","Contact","maxZIndex","windowWidth","windowHeight","ds","windowsMenu","querySelector","footer","windowsIcon","titleBar","bottomApps","currentDate","hoursMinutes","apps","minimizeButtons","closeButtons","restoreButtons","activateFooterEvent","activateOutsideWindowsIconEvent","activateWindowsIconEvent","activateTitleBarEvents","activateDateTimeUpdates","activateAppEvents","activateBottomAppEvents","activateMinimizeButtons","activateCloseButtons","activateRestoreButtons","activateMouseUpEvent","postMessage","openMenu","getAttribute","setAttribute","removeAttribute","startDrag","srcElement","parentElement","incrementMaxZIndex","initialMouseX","initialMouseY","initialWindowX","parseFloat","initialWindowY","drag","stopDrag","bottomApp","mouseY","mouseX","deltaX","deltaY","title_bar","minimizeButton","resizeWindow","getCurrentDateTime","formattedDate","toLocaleDateString","year","month","day","hours","getHours","padStart","minutes","getMinutes","textContent","app","openApp","appName","open","Resume","openWindow","currentWindow","closeButton","content","scrollTo","restore","maximizeWindow","minimizeWindow","currentWindowID"],"sourceRoot":""}